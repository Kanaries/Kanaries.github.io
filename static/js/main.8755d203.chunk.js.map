{"version":3,"sources":["service.ts","actions.ts","state.tsx","utils/fileParser.ts","utils/transform.ts","utils/useComposeState.tsx","components/preference.tsx","demo/vegaBase.tsx","../../visual-insights/build/esm/utils.js","../../visual-insights/build/esm/specification.js","../../visual-insights/build/esm/insights/cluster.js","../../visual-insights/build/esm/cleaner/index.js","plugins/visSummary/index.tsx","pages/gallery/index.tsx","pages/notebook/distributionChart.tsx","pages/notebook/fieldAnalysis.tsx","pages/notebook/subspaces.tsx","pages/notebook/cluster.tsx","pages/notebook/index.tsx","components/table.tsx","components/fieldConfig.tsx","pages/dataSource/clean.ts","pages/dataSource/useDataSource.tsx","utils/deepcopy.ts","pages/dataSource/index.tsx","App.tsx","serviceWorker.js","index.js"],"names":["server","getFieldsSummaryService","dataSource","fields","a","fetch","method","headers","body","JSON","stringify","res","json","result","success","fieldSummaryList","data","Error","message","console","error","getGroupFieldsService","groupedData","newFields","combineFieldsService","dimensions","measures","operator","subspaceList","maxGroupNumber","combinedSpaces","viewSpaces","spaces","univariateSummary","state","updateState","params","filter","field","type","map","name","f","originSummary","fieldWithTypeList","includes","fieldName","groupedResult","newBIFields","groupedField","find","newDimensions","groupedSummary","draft","cookedDataSource","summary","origin","grouped","loading","concat","subspaceSearch","subspaceSearching","orderedDimensions","d","target","g","entropy","Infinity","sort","b","cookedDimensions","cookedMeasures","selectedDimensions","slice","Math","round","length","topK","dimensionSize","extractInsights","gallery","univariateResult","actions","setAutoFreeze","initState","currentPage","rawData","subspacePercentSize","GloalStateContext","createContext","GlobalStateProvider","children","useState","setState","stateUpdater","produce","draftState","Provider","value","actionName","useGlobalState","useContext","csvLoader","file","Promise","resolve","reject","Papa","parse","complete","results","row","record","forEach","index","jsonLoader","reader","FileReader","readAsText","onload","ev","onerror","transNumber","num","isNaN","Number","useComposeState","nextState","checkboxStyles","root","marginTop","aggregationList","key","text","PreferencePanel","props","show","onUpdateConfig","onClose","config","aggregator","setAggregator","defaultAggregated","setDefaultAggregated","defaultStack","setDefaultStack","useEffect","Panel","isOpen","PanelType","smallFixedFar","onDismiss","headerText","closeButtonAriaLabel","onRenderFooterContent","PrimaryButton","onClick","Label","Stack","verticalFill","tokens","childrenGap","padding","ComboBox","selectedKey","label","allowFreeform","autoComplete","options","onChange","e","option","Checkbox","styles","checked","isChecked","geomTypeMap","interval","line","point","density","BaseChart","schema","position","color","opacity","size","shape","geomType","facets","page","fieldFeatures","container","useRef","getFieldType","targetField","aggregatedMeasures","mea","op","as","table","aggregate","asFields","adjustField","aggField","getSpecification","fieldMap","x","y","column","spec","width","values","basicSpec","mark","encoding","channel","stack","transform","selection","groupby","dim","Boolean","sliderSpec","brush","encodings","vconcat","current","embed","ref","memberCount","counter","Map","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","undefined","_step4","_iterator4","Symbol","iterator","next","done","member","has","set","get","err","return","entries","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","enumerable","push","apply","geomTypes","area","path","findBestField","fieldRankList","i","choosen","aestheticMapping","dimFields","visualElements","highFacets","arguments","source","getOwnPropertyDescriptors","defineProperties","defineProperty","priority","fieldLeft","typeIndex","channelList","dimScores","aggData","dimIndex","dimMembers","geom","turnAdjMatrix2List","matrix","edges","j","abs","parents","n","union","n1","n2","p1","p2","dropNullColumn","keepFields","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","finalFields","ans","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","dropNull","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","keep","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","_loop","every","isFieldNumeric","toString","isNullValue","useMode","fieldNames","countMap","modeMap","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","_fieldName","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","_counter","members","max","maxPos","newDataSource","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","_record","_iteratorNormalCompletion12","_didIteratorError12","_iteratorError12","_step12","_iterator12","_fieldName2","simpleClean","_iteratorNormalCompletion13","_didIteratorError13","_iteratorError13","_step13","_iterator13","_iteratorNormalCompletion14","_didIteratorError14","_iteratorError14","_step14","_iterator14","_iteratorNormalCompletion15","_didIteratorError15","_iteratorError15","_step15","_iterator15","StoryTeller","space","spaceList","isTeachingBubbleVisible","setIsTeachingBubbleVisible","sortedFieldsScores","useMemo","mostInfluencedDimension","sp","some","bestMeasure","measuresInView","min","minPos","countDiffField","join","DefaultButton","id","TeachingBubble","calloutProps","directionalHint","DirectionalHint","bottomCenter","isWide","hasCloseIcon","headline","Gallery","setCurrentPage","insightBoard","fieldConfig","configPanel","dataConfig","pageStatus","setPageStatus","visualConfig","setVisualConfig","setViewSpaces","dataView","setDataView","gotoPage","pageNo","clusterMeasures","correlationMatrix","then","maxEntropy","viewState","fieldScores","specification","log","currentSpace","subspace","className","ProgressIndicator","description","style","marginBottom","IconButton","iconProps","iconName","ariaLabel","dir","overflow","horizontal","allowDisabledFocus","DistributionChart","chart","fieldType","hasIndex","test","memberName","exec","groups","left","sortBy","background","height","axis","columns","minWidth","maxWidth","getIconNameByFieldType","contrastColor","FieldAnalsis","entropyRange","originEntropy","s","onRenderCompactCard","item","toFixed","distribution","onRenderExpandedCard","DetailsList","compact","items","selectionMode","SelectionMode","none","onRenderItemColumn","expandingCardProps","renderData","compactCardHeight","expandedCardHeight","fieldContent","bgColor","Icon","range","chroma","scale","domain","rgb","bgColorStr","fontColorStr","HoverCard","expandedCardOpenDelay","instantOpenOnClick","boxShadow","backgroundColor","encodeArr","arr","Subspaces","onSpaceChange","curIndex","setCurIndex","spaceChart","relationChart","score","measureName","measureValue","on","reverse","condition","view","addEventListener","datum","findIndex","targetSpace","m","correlation","scheme","ClusterBoard","adjMatrix","onFocusGroup","clusterResult","edgesInMST","inCutEdge","edge","Set","kruskalMST","treeData","nodes","group","signal","NoteBook","isAggregated","setIsAggregated","clusterState","setClusterState","setMeasuresInView","Slider","valueFormat","showValue","subspaces","step","measInView","Toggle","defaultChecked","onText","offText","DataTable","maxHeight","FieldPanel","setFields","updateFieldType","cleanMethodList","useDataSource","cleanMethod","Transform","preparedData","Cleaner","cleanData","deepcopy","DataSourceBoard","dispatch","setCleanMethod","dataSetting","fileEle","files","tmpFields","FileLoader","commandBarList","click","disabled","onExtractInsights","Callout","role","gapSpace","setInitialFocus","hidden","multiple","accept","display","CommandBar","overflowButtonProps","margin","fontSize","fontWeight","pivotList","title","itemKey","App","pivotKey","href","src","Pivot","onLinkClick","headersOnly","pivot","PivotItem","window","location","hostname","match","initializeIcons","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8755d203.chunk.js","sourcesContent":["import { DataSource,  Field, FieldType, OperatorType } from './global';\nlet server = '//lobay.moe:8443';\n\nif (process.env.NODE_ENV !== 'production') {\n  console.log('using dev server');\n  server = '//localhost:8000';\n}\n\ninterface SuccessResult<T> {\n  success: true;\n  data: T;\n}\ninterface FailResult<T> {\n  success: false;\n  message: string;\n}\n\ntype Result<T> = SuccessResult<T> | FailResult<T>;\n\ninterface FieldAnalysisResponse {\n  dimScores: Array<[string, number, number, Field]>;\n  aggData: DataSource;\n}\nexport interface FieldAnalysisResult extends FieldAnalysisResponse {\n  newDimensions: string[];\n}\nexport async function fieldsAnalysisService (cleanData: DataSource, dimensions: string[], measures: string[]): Promise<FieldAnalysisResult> {\n  const res = await fetch(server + '/api/service/fieldsAnalysis', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      dataSource: cleanData,\n      dimensions,\n      measures\n    })\n  });\n  const result: Result<FieldAnalysisResponse> = await res.json();\n  if (result.success === true) {\n    const { dimScores, aggData } = result.data;\n    const newDimensions = dimScores.map(dim => dim[0]).filter(dim => !measures.includes(dim));\n    return {\n      dimScores,\n      aggData,\n      newDimensions\n    }\n  } else {\n    throw new Error('fieldsAnalysisService failed' + result.message);\n  }\n}\nexport interface View {\n  groups: string[][];\n  detail: [string[], any, number[][]];\n  score: number;\n}\n\nexport async function getInsightViewsService (aggData: DataSource, newDimensions: string[], measures: string[]): Promise<View[]> {\n  const res = await fetch(server + '/api/service/getInsightViews', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      dataSource: aggData,\n      dimensions: newDimensions,\n      measures\n    })\n  });\n  const result: Result<View[]> = await res.json();\n  if (result.success === true) {\n    const views = result.data;\n    return views;\n  } else {\n    throw new Error('getInsightView service fail' + result.message);\n  }\n}\n/**\n * statistic description for a field\n */\nexport interface FieldSummary {\n  fieldName: string;\n  entropy: number;\n  maxEntropy: number;\n  distribution: Array<{ memberName: string; count: number }>\n  type: FieldType\n}\nexport async function getFieldsSummaryService (dataSource: DataSource, fields: string[] | Field[]): Promise<FieldSummary[] | undefined> {\n  try {\n    const res = await fetch(server + '/api/service/fieldsSummary', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        dataSource,\n        fields\n      })\n    })\n    const result: Result<FieldSummary[]> = await res.json();\n    if (result.success === true) {\n      const fieldSummaryList = result.data;\n      return fieldSummaryList\n    } else {\n      throw new Error('[fields summary failed]' + result.message)\n    }\n  } catch (error) {\n    console.error(error)\n  }\n}\n\ninterface GroupFieldsResponse {\n  groupedData: DataSource;\n  newFields: Field[];\n  fields: Field[];\n}\nexport async function getGroupFieldsService (dataSource: DataSource, fields: Field[]): Promise<GroupFieldsResponse | undefined> {\n  try {\n    const res = await fetch(server + '/api/service/groupFields', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        dataSource,\n        fields\n      })\n    })\n    const result: Result<GroupFieldsResponse> = await res.json();\n    if (result.success === true) {\n      const { groupedData, newFields, fields } = result.data;\n      return { groupedData, newFields, fields }\n    } else {\n      throw new Error('[group fields failed]' + result.message)\n    }\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nexport interface Subspace {\n  score: number;\n  dimensions: string[];\n  measures: Array<{name: string; value: number}>;\n  correlationMatrix: number[][];\n}\nexport async function combineFieldsService (dataSource: DataSource, dimensions: string[], measures: string[], operator: OperatorType): Promise<Subspace[] | undefined> {\n  try {\n    const res = await fetch(server + '/api/service/combineFields', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        dataSource,\n        dimensions,\n        measures,\n        operator\n      })\n    })\n    const result: Result<Subspace[]> = await res.json();\n    if (result.success === true) {\n      const subspaceList = result.data;\n      return subspaceList\n    } else {\n      throw new Error('[combine fields failed]' + result.message)\n    }\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nexport interface ViewCombinedSpace {\n  dimensions: string[];\n  measures: Array<{name: string; value: number}>;\n  matrix: number[][];\n}\n\nexport interface ViewSpace {\n  dimensions: string[];\n  measures: string[]\n}\n\nexport async function clusterMeasures (maxGroupNumber: number, combinedSpaces: ViewCombinedSpace[]): Promise<ViewSpace[]> {\n  let viewSpaces: ViewSpace[] = [];\n  try {\n    const res = await fetch(server + '/api/service/clusterMeasures', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        maxGroupNumber,\n        spaces: combinedSpaces\n      })\n    });\n    const result: Result<ViewSpace[]> = await res.json();\n    if (result.success === true) {\n      viewSpaces = result.data;\n    } else {\n      throw new Error('[cluster measures]' + result.message)\n    }\n  } catch (error) {\n    console.error(error)\n  }\n  return viewSpaces;\n}","import { DataSource, BIField, Field, OperatorType } from \"./global\";\nimport {\n  getFieldsSummaryService,\n  FieldSummary,\n  getGroupFieldsService,\n  combineFieldsService,\n  clusterMeasures,\n  Subspace\n} from \"./service\";\nimport { GlobalState, StateUpdater } from './state';\n\n\n\ntype Action<T> = (state: GlobalState, updateState: (updater:StateUpdater<GlobalState>) => void, params: T) => any;\n\n\nconst univariateSummary: Action<{dataSource: DataSource; fields: BIField[]}> = async (state, updateState, params) => {\n  const { dataSource, fields } = params;\n  const dimensions = fields\n    .filter(field => field.type === \"dimension\")\n    .map(field => field.name);\n  const measures = fields\n    .filter(field => field.type === \"measure\")\n    .map(field => field.name);\n  // updateState(draft => { draft.loading.univariateSummary = true })\n  try {\n    /**\n     * get summary of the orignal dataset(fields without grouped)\n     */\n    const originSummary = await getFieldsSummaryService(\n      dataSource,\n      fields.map(f => f.name)\n    );\n    // todo only group dimension.\n    let fieldWithTypeList: Field[] = originSummary\n      ? originSummary\n          .filter(f => dimensions.includes(f.fieldName))\n          .map(f => {\n            return {\n              name: f.fieldName,\n              type: f.type\n            };\n          })\n      : [];\n    /**\n     * bug:\n     * should not group measures!!!\n     */\n    const groupedResult = await getGroupFieldsService(\n      dataSource,\n      fieldWithTypeList\n    );\n    const { groupedData, newFields } = groupedResult\n      ? groupedResult\n      : { groupedData: dataSource, newFields: fieldWithTypeList };\n    /**\n     * `newBIFields` shares the same length (size) with fields.\n     * It repalces some of the fields with high entropy with a grouped new field.\n     * newBIFields does not contain field before grouped.\n     */\n    const newBIFields: BIField[] = fields.map(field => {\n      let groupedField = newFields.find(\n        f => f.name === field.name + \"(group)\"\n      );\n      return {\n        name: groupedField ? groupedField.name : field.name,\n        type: field.type\n      };\n    });\n    const newDimensions: string[] = newBIFields\n      .filter(f => f.type === \"dimension\")\n      .map(f => f.name);\n\n    /**\n     * groupedSummary only contains newFields generated during `groupFieldsService`.\n     */\n    const groupedSummary = await getFieldsSummaryService(\n      groupedData,\n      newFields\n    );\n    \n    updateState(draft => {\n      draft.cookedDataSource = groupedData;\n      draft.summary = {\n        origin: originSummary || [],\n        grouped: groupedSummary || []\n      }\n      draft.loading.univariateSummary = false;\n    });\n    // setFields(newBIFields);\n    // tmp solutions\n    let summary = (groupedSummary || []).concat(originSummary || []);\n    return {\n      groupedData,\n      summary,\n      newDimensions,\n      measures\n    }\n    // await SubspaceSeach(groupedData, summary, newDimensions, measures, \"sum\");\n  } catch (error) {\n    updateState(draft => {\n      draft.loading.univariateSummary = false;\n    });\n  }\n}\n\n\n\ninterface SubspaceSeachParams {\n  groupedData: DataSource;\n  summary: FieldSummary[];\n  dimensions: string[];\n  measures: string[];\n  operator: OperatorType\n}\nconst subspaceSearch: Action<SubspaceSeachParams> = async (state, updateState, params) => {\n  const { groupedData: dataSource, summary, dimensions, measures, operator } = params;\n  updateState(draft => {\n    draft.loading.subspaceSearching = true;\n  });\n  let orderedDimensions: Array<{ name: string; entropy: number }> = [];\n  orderedDimensions = dimensions.map(d => {\n    let target = summary.find(g => g.fieldName === d);\n    return {\n      name: d,\n      entropy: target ? target.entropy : Infinity\n    };\n  });\n\n  orderedDimensions.sort((a, b) => a.entropy - b.entropy);\n  updateState(draft => {\n    draft.cookedDimensions = orderedDimensions.map(d => d.name);\n    draft.cookedMeasures = measures;\n  });\n  const selectedDimensions = orderedDimensions\n    .map(d => d.name)\n    .slice(\n      0,\n      Math.round(orderedDimensions.length * state.topK.dimensionSize)\n    );\n  try {\n    const subspaceList = await combineFieldsService(\n      dataSource,\n      selectedDimensions,\n      measures,\n      operator\n    );\n    if (subspaceList) {\n      updateState(draft => {\n        draft.subspaceList = subspaceList;\n      });\n    }\n    updateState(draft => {\n      draft.loading.subspaceSearching = false;\n    });\n  } catch (error) {\n    updateState(draft => {\n      draft.loading.subspaceSearching = false;\n    });\n  }\n}\n\nconst extractInsights: Action<{dataSource: DataSource; fields: BIField[]}> = async (state, updateState, params) => {\n  const { dataSource, fields } = params;\n  updateState(draft => {\n    draft.loading.gallery = true\n  })\n  try {\n    const univariateResult = await univariateSummary(state, updateState, {\n      dataSource, fields\n    });\n      if (univariateResult) {\n        const {\n          groupedData,\n          summary,\n          newDimensions,\n          measures\n        } = univariateResult;\n        await subspaceSearch(state, updateState, {\n          groupedData, summary, dimensions: newDimensions, measures, operator: \"sum\"\n        });\n      }\n  } catch (error) {\n  } finally {\n    updateState(draft => {\n      draft.loading.gallery = false\n      draft.loading.gallery = false\n    })\n  }\n}\nconst actions = {\n  univariateSummary,\n  subspaceSearch,\n  extractInsights\n}\nexport type Actions =  typeof actions\n\ntype valueof<T> = T[keyof T]\n\ntype Foo = Parameters<typeof subspaceSearch> // ReturnType\nexport type Test = valueof<{  [key in keyof Actions]: {\n  name: key,\n  params: Parameters<Actions[key]>[2]\n}}>\n\nexport default actions;\n","import produce, { Draft, setAutoFreeze } from 'immer';\nimport React, { useState, useMemo, createContext, useContext } from 'react';\nimport { DataSource, BIField } from './global';\nimport { Subspace, FieldSummary, ViewSpace } from './service';\nimport actions, { Test, Actions } from './actions';\n\nsetAutoFreeze(false)\n\nexport interface GlobalState {\n  /**\n   * `currentPage` is the current page number of visualization in explore board.\n   */\n  currentPage: number;\n  /**\n   * raw data is fetched and parsed data or uploaded data without any other changes.\n   * computed value `dataSource` will be calculated \n   */\n  rawData: DataSource;\n  /**\n   * fields contains fields with `dimension` or `measure` type.\n   * currently, this kind of type is not computed property unlike 'quantitative', 'nominal'...\n   * This is defined by user's purpose or domain knowledge.\n   */\n  fields: BIField[];\n  /**\n   * dataSource been cleaned and grouped which is readly for exploration.\n   */\n  cookedDataSource: DataSource;\n  cookedDimensions: string[];\n  cookedMeasures: string[];\n  /**\n   * subspaceList is ordered list by it score.\n   */\n  // subspaceList: Subspace[]\n  /**\n   * loading status for some service\n   * todo: \n   * manage the loading status in pages intead of globally.\n   */\n  loading: {\n    univariateSummary: boolean;\n    subspaceSearching: boolean;\n    gallery: boolean;\n  };\n  \n  topK: {\n    /**\n     * top k percent subspace it will fetch.\n     */\n    subspacePercentSize: number;\n    dimensionSize: number;\n  }\n  maxGroupNumber: number;\n  subspaceList: Subspace[];\n  summary: {\n    origin: FieldSummary[];\n    grouped: FieldSummary[];\n  };\n  viewSpaces: ViewSpace[]\n}\n\ninterface GlobalComputed {\n  /**\n   * `dataSource` is computed data based on fields' property(dimension or measure).\n   * sometimes, uploaded data contains contains some measure field but they are parsed into string value, which is raw data.\n   * dataSource transform these fields into what they should be for future computation.\n   * This is usually happened when a csv file is uploaded.\n   */\n  dataSource: DataSource;\n}\nexport type StateUpdater<S> = (draftState: Draft<S>) => void\n\n// function createStore<S>(initState: S) {\n//   const [state, setState] = useState<S>(initState)\n\n//   return function useGlobalState(): [S, (stateUpdater: StateUpdater<S>) => void] {\n//     const updateState = (stateUpdater: StateUpdater<S>) => {\n//       const nextState = produce<S>(state, draftState => stateUpdater(draftState))\n//       setState(nextState)\n//     }\n//     return [state, updateState]\n//   }\n// }\n\nconst initState: GlobalState = {\n  currentPage: 0,\n  fields: [],\n  rawData: [],\n  cookedDataSource: [],\n  cookedDimensions: [],\n  cookedMeasures: [],\n  loading: {\n    univariateSummary: false,\n    subspaceSearching: false,\n    gallery: false\n  },\n  topK: {\n    subspacePercentSize: 0.3,\n    dimensionSize: 0.72\n  },\n  maxGroupNumber: 4,\n  subspaceList: [],\n  summary: {\n    origin: [],\n    grouped: []\n  },\n  viewSpaces: []\n};\ntype Dispatch<T> = (actionName: string, params: T) => void;\ntype valueof<T> = T[keyof T]\nconst GloalStateContext = createContext<[GlobalState, (updater:StateUpdater<GlobalState>) => void, <P extends Test>(actionName: P['name'], params: P['params']) => void]>(null!)\n\nexport function GlobalStateProvider({ children }: { children: React.ReactNode }) {\n  const [state, setState] = useState<GlobalState>(initState)\n\n  const updateState = (stateUpdater: StateUpdater<GlobalState>) => {\n    setState(state => {\n      const nextState = produce<GlobalState>(state, draftState => stateUpdater(draftState))\n      return nextState;\n    })\n  }\n\n  const dispatch: <P extends Test>(actionName: P['name'], params: P['params']) => void = (actionName, params) => {\n    if (typeof actions[actionName] === 'function') {\n\n      // todo: fix the any type\n      \n      actions[actionName](state, updateState, params as any);\n      // actions['subspaceSearch'](state, updateState, params)\n    }\n  }\n\n\n\n  return (\n    <GloalStateContext.Provider value={[state, updateState, dispatch]}>\n      {children}\n    </GloalStateContext.Provider>\n  )\n}\nexport function useGlobalState() {\n  return useContext(GloalStateContext)\n}","import { Record, DataSource } from '../global';\nimport Papa from 'papaparse';\n\nexport function csvLoader (file: File) {\n  return new Promise<DataSource>((resolve, reject) => {\n    Papa.parse(file, {\n      complete (results, file) {\n        let data: string[][] = results.data;\n        let fields: string[] = data[0];\n        let rawData = data.slice(1).map(row => {\n          let record: Record = {};\n          fields.forEach((field, index) => {\n            record[field] = row[index]\n          })\n          return record\n        })\n        resolve(rawData)\n      },\n      error (error, file) {\n        reject(error)\n      }\n    })\n  })\n}\n\nexport function jsonLoader (file: File): Promise<DataSource> {\n  return new Promise((resolve, reject) => {\n    let reader = new FileReader()\n    reader.readAsText(file)\n    reader.onload = (ev) => {\n      if (ev.target) {\n        try {\n          const rawData: DataSource = JSON.parse(ev.target.result as string);\n          resolve(rawData);\n        } catch (error) {\n          reject(error)\n        }\n      } else {\n        reject(ev)\n      }\n    }\n    reader.onerror = reject\n  })\n}","export function transNumber(num: any): number | null {\n  if (isNaN(num)) {\n    return null\n  }\n  return Number(num)\n}","import React, { useState } from 'react';\nimport produce, { Draft } from 'immer';\n/**\n * @param S type of the composed state\n */\nexport type StateUpdater<S> = (draftState: Draft<S>) => void\n/**\n * \n * @param initState\n * useComposeState helps you manage several state together, provided with immutable state change api\n * \n * example:\n * ```js\n * const [state, setState] = useComposeState({foo: 12, bar: { foo: 20}})\n * setState(draft => {\n *  draft.bar.foo = 100;\n * })\n * ```\n */\nexport default function useComposeState<S>(initState: S): [S, (stateUpdater: StateUpdater<S>) => void] {\n  const [state, setState] = useState<S>(initState)\n  const updateState = (stateUpdater: StateUpdater<S>) => {\n    const nextState = produce<S>(state, draftState => stateUpdater(draftState))\n    setState(nextState)\n  }\n  return [state, updateState]\n}","import React, { useState, useEffect } from 'react';\nimport { PrimaryButton, Stack, Checkbox, Panel, PanelType, ComboBox, Label } from 'office-ui-fabric-react';\nimport { Aggregator } from '../global';\nconst checkboxStyles = () => {\n  return {\n    root: {\n      marginTop: '10px'\n    }\n  };\n}\n\n// todo: import aggregators list from cube-core\nconst aggregationList: Array<{ key: Aggregator; text: string }> = [\n  { key: 'sum', text: 'Sum' },\n  { key: 'count', text: 'Count' },\n  { key: 'mean', text: 'Mean' }\n]\nexport interface PreferencePanelConfig {\n  aggregator: Aggregator;\n  defaultAggregated: boolean;\n  defaultStack: boolean\n}\nexport interface PreferencePanelProps {\n  show: boolean;\n  onUpdateConfig: (props: PreferencePanelConfig) => void;\n  onClose: () => void;\n  config: PreferencePanelConfig\n}\n\nconst PreferencePanel: React.FC<PreferencePanelProps> = (props) => {\n  const {\n    show = false,\n    onUpdateConfig,\n    onClose,\n    config\n  } = props;\n  \n  const [aggregator, setAggregator] = useState<Aggregator>('sum');\n  const [defaultAggregated, setDefaultAggregated] = useState(true);\n  const [defaultStack, setDefaultStack] = useState(true);\n  \n  useEffect(() => {\n    const { aggregator, defaultAggregated, defaultStack } = config;\n    setAggregator(aggregator);\n    setDefaultAggregated(defaultAggregated);\n    setDefaultStack(defaultStack);\n  }, [config, show])\n  \n  const onRenderFooterContent = () => <div>\n    <PrimaryButton onClick={() => { onUpdateConfig({ aggregator, defaultAggregated, defaultStack }) }}>\n      Save\n    </PrimaryButton>\n  </div>\n  \n  return <Panel\n    isOpen={show}\n    type={PanelType.smallFixedFar}\n    onDismiss={onClose}\n    headerText=\"Preference\"\n    closeButtonAriaLabel=\"Close\"\n    onRenderFooterContent={onRenderFooterContent}\n  >\n    <Label>Preference</Label>\n    <Stack verticalFill tokens={{ childrenGap: 50, padding: 6}}>\n      <ComboBox\n        selectedKey={aggregator}\n        label=\"Aggregator\"\n        allowFreeform={true}\n        autoComplete=\"on\"\n        options={aggregationList}\n        onChange={(e, option) => {option && setAggregator(option.key as Aggregator)}}\n      />\n      <Checkbox styles={checkboxStyles} label=\"measurement aggregation\" checked={defaultAggregated} onChange={(e, isChecked) => {setDefaultAggregated(isChecked || false)}} />\n      <Checkbox styles={checkboxStyles} label=\"measurement stack\" checked={defaultStack} onChange={(e, isChecked) => {setDefaultStack(isChecked || false)}} />\n    </Stack>\n  </Panel>\n}\n\nexport default PreferencePanel;","import React, { useEffect, useRef } from 'react';\nimport aggregate from 'cube-core';\nimport embed from 'vega-embed';\nimport { DataSource, Field, FieldType } from '../global'\nconst geomTypeMap: {[key: string]: any} = {\n  interval: 'bar',\n  line: 'line',\n  point: 'point',\n  density: 'rect'\n}\nexport interface Specification {\n  position?: string[];\n  color?: string[];\n  opacity?: string[];\n  size?: string[];\n  shape?: string[];\n  geomType?: string[];\n  facets?: string[];\n  page?: string[];\n  filter?: string[]\n}\ninterface BaseChartProps {\n  defaultAggregated: boolean;\n  defaultStack: boolean;\n  aggregator: 'sum' | 'mean' | 'count';\n  dataSource: DataSource;\n  dimensions: string[];\n  measures: string[];\n  fieldFeatures: Field[];\n  schema: Specification;\n}\n\nconst BaseChart: React.FC<BaseChartProps> = (props) => {\n  const {\n    defaultAggregated,\n    defaultStack,\n    aggregator,\n    dataSource = [],\n    dimensions = [],\n    measures = [],\n    schema: {\n      position = [],\n      color = [],\n      opacity = [],\n      size = [],\n      shape = [],\n      geomType = [],\n      facets = [],\n      page = [],\n      filter = []\n    },\n    fieldFeatures = []\n  } = props;\n\n  const container = useRef<HTMLDivElement>(null);\n\n  function getFieldType (field: string): FieldType {\n    let targetField = fieldFeatures.find(f => f.name === field);\n    return targetField ? targetField.type : 'nominal';\n  }\n\n  const aggregatedMeasures = measures.map(mea => {\n    return {\n      op: aggregator,\n      field: mea,\n      as: `${mea}_${aggregator}`\n    }\n  })\n  let table = defaultAggregated ? aggregate({ dataSource, dimensions, measures, operator: aggregator, asFields: aggregatedMeasures.map(mea => mea.as)}) : dataSource;\n  function adjustField (fieldName: string): string {\n    if (defaultAggregated && measures.includes(fieldName)) {\n      let aggField = aggregatedMeasures.find(mea => {\n        return mea.field === fieldName;\n      });\n      return aggField ? aggField.as : fieldName;\n    }\n    return fieldName;\n  }\n  // todo for slider\n  // function getDomain (field) {\n  //   let fieldType = fieldFeatures.find(f => f.name === field).type;\n  //   let values = table.map(row => row[field]);\n  //   if (fieldType === 'quantitative') {\n  //     let min = Math.min(0, ...values)\n  //     let max = Math.max(...values)\n  //     return [min, max]\n  //   }\n  //   return [...new Set(values)];\n  // }\n  function getSpecification () {\n    const fieldMap: any = {\n      x: position[0],\n      y: position[1],\n      color: color[0],\n      size: size[0],\n      opacity: opacity[0],\n      row: facets[0],\n      column: facets[1]\n    }\n    let spec: any = {\n      width: 600,\n      data: {\n        values: table\n      }\n    }\n    let basicSpec: any = {\n      width: 600,\n      mark: (geomType[0] && geomTypeMap[geomType[0]]) ? geomTypeMap[geomType[0]] : geomType[0],\n      encoding: {}\n    };\n    for (let channel in fieldMap) {\n      if (fieldMap[channel]) {\n        basicSpec.encoding[channel] = {\n          field: adjustField(fieldMap[channel]),\n          type: getFieldType(fieldMap[channel])\n        }\n        if (['x', 'y'].includes(channel) && getFieldType(fieldMap[channel]) === 'quantitative' && !defaultStack) {\n          basicSpec.encoding[channel].stack = null;\n        }\n      }\n    }\n    if (!defaultStack && opacity.length === 0) {\n      basicSpec.encoding.opacity = { value: 0.7 }\n    }\n    if (page.length === 0) {\n      spec = {\n        ...spec,\n        ...basicSpec\n      }\n    } else if (page.length > 0) {\n      basicSpec.transform = [\n        {filter: {selection: 'brush'}},\n        defaultAggregated ? {\n          aggregate: aggregatedMeasures,\n          groupby: dimensions.filter(dim => dim !== page[0])\n        } : null\n      ].filter(Boolean);\n      let sliderSpec = {\n        width: 600,\n        mark: 'tick',\n        selection: { brush: { encodings: ['x'], type: 'interval'}},\n        encoding: {\n          x: { field: page[0], type: getFieldType(page[0]) }\n        }\n      }\n      spec.vconcat = [basicSpec, sliderSpec];\n    }\n    return spec;\n  }\n  useEffect(() => {\n    if (container.current !== null) {\n      if (position.length > 0 && geomType.length > 0) {\n        let spec = getSpecification()\n        // console.log(spec)\n        embed(container.current, spec);\n      }\n    }\n  })\n  return <div ref={container}></div>\n  \n}\n\nexport default BaseChart;","import _defineProperty from \"/Users/chenhao/Documents/GitHub/Rath/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/chenhao/Documents/GitHub/Rath/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"/Users/chenhao/Documents/GitHub/Rath/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar JOIN_SYMBOL = '_';\nvar MAGIC_NUMBER = 5;\n\nfunction deepcopy(data) {\n  return JSON.parse(JSON.stringify(data));\n}\n\nfunction isFieldCategory(dataSource, fieldName) {\n  return dataSource.every(function (record) {\n    return typeof record[fieldName] === 'string' || typeof record[fieldName] === 'undefined' || record[fieldName] === null;\n  });\n}\n\nfunction isFieldContinous(dataSource, fieldName) {\n  return dataSource.every(function (record) {\n    return typeof record[fieldName] === 'number' || typeof record[fieldName] === 'undefined' || record[fieldName] === null;\n  });\n}\n\nfunction isFieldNumeric(dataSource, fieldName) {\n  return dataSource.every(function (record) {\n    return !isNaN(record[fieldName]) || typeof record[fieldName] === 'undefined' || record[fieldName] === null;\n  });\n}\n\nfunction isFieldTime(dataSource, fieldName) {\n  return dataSource.every(function (record) {\n    return !isNaN(Date.parse(record[fieldName])) && typeof record[fieldName] === 'string' && /[0-9]{0,4}-[0-9]{0,2}(-[0-9]{0,2})?/.test(record[fieldName]) || typeof record[fieldName] === 'undefined' || record[fieldName] === null;\n  });\n}\n\nfunction aggregate(_ref) {\n  var dataSource = _ref.dataSource,\n      fields = _ref.fields,\n      bys = _ref.bys,\n      _ref$method = _ref.method,\n      method = _ref$method === void 0 ? 'sum' : _ref$method;\n  var tmp = [];\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = bys[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var by = _step.value;\n      var map = new Map();\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        var _loop = function _loop() {\n          var record = _step2.value;\n          var key = JSON.stringify(fields.map(function (field) {\n            return record[field];\n          }));\n\n          if (!map.has(key)) {\n            map.set(key, 0);\n          }\n\n          map.set(key, map.get(key) + record[by]);\n        };\n\n        for (var _iterator2 = dataSource[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          _loop();\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = map[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var _ref4 = _step3.value;\n\n          var _ref3 = _slicedToArray(_ref4, 2);\n\n          var key = _ref3[0];\n          var value = _ref3[1];\n\n          var row = _defineProperty({\n            index: key\n          }, by, value);\n\n          var dims = JSON.parse(key);\n\n          for (var i = 0; i < fields.length; i++) {\n            row[fields[i]] = dims[i];\n          }\n\n          tmp.push(row);\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return != null) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  var ans = new Map();\n\n  for (var _i = 0, _tmp = tmp; _i < _tmp.length; _i++) {\n    var record = _tmp[_i];\n\n    if (!ans.has(record.index)) {\n      ans.set(record.index, {});\n    }\n\n    ans.set(record.index, _objectSpread({}, ans.get(record.index), {}, record));\n  }\n\n  return _toConsumableArray(ans.values());\n}\n\nfunction memberCount(dataSource, field) {\n  var counter = new Map();\n  var _iteratorNormalCompletion4 = true;\n  var _didIteratorError4 = false;\n  var _iteratorError4 = undefined;\n\n  try {\n    for (var _iterator4 = dataSource[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n      var row = _step4.value;\n      var member = row[field];\n\n      if (!counter.has(member)) {\n        counter.set(member, 0);\n      }\n\n      counter.set(member, counter.get(member) + 1);\n    }\n  } catch (err) {\n    _didIteratorError4 = true;\n    _iteratorError4 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n        _iterator4.return();\n      }\n    } finally {\n      if (_didIteratorError4) {\n        throw _iteratorError4;\n      }\n    }\n  }\n\n  return _toConsumableArray(counter.entries());\n}\n\nfunction groupContinousField(_ref5) {\n  var dataSource = _ref5.dataSource,\n      field = _ref5.field,\n      _ref5$newField = _ref5.newField,\n      newField = _ref5$newField === void 0 ? \"\".concat(field, \"(con-group)\") : _ref5$newField,\n      groupNumber = _ref5.groupNumber;\n  // const members = memberCount(dataSource, field);\n  // todo: outlier detection\n  var values = dataSource.map(function (item) {\n    return item[field];\n  });\n  var max = Math.max.apply(Math, _toConsumableArray(values)); // Number.EPSILON * ;\n\n  var min = Math.min.apply(Math, _toConsumableArray(values));\n  var segWidth = (max - min) / groupNumber;\n  var ranges = [];\n\n  for (var i = 0; i < groupNumber; i++) {\n    var left = min + i * segWidth;\n    var right = min + (i + 1) * segWidth;\n    ranges.push([left, right]);\n  }\n\n  ranges[0][0] = -Infinity;\n  ranges[ranges.length - 1][1] = Infinity;\n  var _iteratorNormalCompletion5 = true;\n  var _didIteratorError5 = false;\n  var _iteratorError5 = undefined;\n\n  try {\n    var _loop2 = function _loop2() {\n      var record = _step5.value;\n      var range = ranges.find(function (r) {\n        return r[0] <= record[field] && record[field] < r[1];\n      });\n\n      if (typeof range !== 'undefined') {\n        record[newField] = \"[\".concat(range[0], \", \").concat(range[1], \")\");\n      } else {\n        record[newField] = 'null';\n      }\n    };\n\n    for (var _iterator5 = dataSource[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n      _loop2();\n    }\n  } catch (err) {\n    _didIteratorError5 = true;\n    _iteratorError5 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion5 && _iterator5.return != null) {\n        _iterator5.return();\n      }\n    } finally {\n      if (_didIteratorError5) {\n        throw _iteratorError5;\n      }\n    }\n  }\n\n  return dataSource;\n}\n\nfunction groupCategoryField(_ref6) {\n  var dataSource = _ref6.dataSource,\n      field = _ref6.field,\n      _ref6$newField = _ref6.newField,\n      newField = _ref6$newField === void 0 ? \"\".concat(field, \"(cat-group)\") : _ref6$newField,\n      groupNumber = _ref6.groupNumber;\n  // auto category should obey Power law distrubution.\n  var members = memberCount(dataSource, field);\n  members.sort(function (a, b) {\n    return b[1] - a[1];\n  });\n  var sum = members.map(function (v) {\n    return v[1];\n  });\n  groupNumber = members.length;\n\n  for (var i = sum.length - 2; i >= 0; i--) {\n    sum[i] = sum[i + 1] + sum[i];\n  }\n\n  for (var _i2 = 0; _i2 < members.length - 2; _i2++) {\n    // strict mode\n    // if (members[i][1] >= sum[i + 1] && members[i + 1][1] < sum[i + 2]) {\n    if (members[_i2][1] * MAGIC_NUMBER >= sum[_i2 + 1] && members[_i2 + 1][1] / MAGIC_NUMBER < sum[_i2 + 2]) {\n      groupNumber = _i2 + 2;\n      break;\n    }\n  } // groupNumber = Math.max(Math.round(Math.sqrt(members.length)), groupNumber)\n\n\n  if (groupNumber === members.length) {\n    return dataSource.map(function (record) {\n      return _objectSpread({}, record, _defineProperty({}, newField, record[field]));\n    });\n  }\n\n  var set = new Set();\n\n  for (var _i3 = groupNumber - 1; _i3 < members.length; _i3++) {\n    set.add(members[_i3][0]);\n  }\n\n  var _iteratorNormalCompletion6 = true;\n  var _didIteratorError6 = false;\n  var _iteratorError6 = undefined;\n\n  try {\n    for (var _iterator6 = dataSource[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n      var record = _step6.value;\n\n      if (set.has(record[field])) {\n        record[newField] = 'others';\n      } else {\n        record[newField] = record[field];\n      }\n    }\n  } catch (err) {\n    _didIteratorError6 = true;\n    _iteratorError6 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion6 && _iterator6.return != null) {\n        _iterator6.return();\n      }\n    } finally {\n      if (_didIteratorError6) {\n        throw _iteratorError6;\n      }\n    }\n  }\n\n  return dataSource;\n}\n\nexport { deepcopy, memberCount, groupCategoryField, groupContinousField, aggregate, isFieldCategory, isFieldContinous, isFieldTime, isFieldNumeric, JOIN_SYMBOL };","import _defineProperty from \"/Users/chenhao/Documents/GitHub/Rath/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { // isFieldCategory,\n// isFieldContinous,\nmemberCount } from './utils';\n\nfunction getVisualElements() {\n  return {\n    position: 2,\n    color: 1,\n    size: 1,\n    shape: 1,\n    opacity: 1,\n    facets: 2,\n    page: 1,\n    filter: 1,\n    highFacets: Infinity\n  };\n}\n\nvar geomTypes = {\n  interval: [0, 20],\n  line: [21, Infinity],\n  area: [21, Infinity],\n  point: [0, 10000000],\n  path: [0, 100],\n  density: [1001, Infinity]\n};\n\nfunction findBestField(type, fieldRankList) {\n  for (var i = fieldRankList.length - 1; i >= 0; i--) {\n    if (fieldRankList[i].type === type && !fieldRankList[i].choosen) {\n      return fieldRankList[i];\n    }\n  }\n\n  return false;\n}\n/**\n *\n * @param dimFields ranked dimension by entropy. asc\n * todo: not clear enough implementation for using asc and desc\n */\n\n\nfunction aestheticMapping(dimFields) {\n  var spec = {};\n  var visualElements = getVisualElements();\n  var fieldRankList = dimFields.map(function (field) {\n    return _objectSpread({}, field, {\n      choosen: false\n    });\n  });\n  var priority = [['quantitative', ['position', 'size', 'opacity', 'color', 'page', 'filter', 'hightFacets']], ['ordinal', ['position', 'opacity', 'color', 'facets', 'size', 'page', 'filter', 'highFacets']], ['nominal', ['position', 'color', 'facets', 'shape', 'page', 'filter', 'hightFacets']], ['temporal', ['position', 'page', 'filter']]];\n  var fieldLeft = fieldRankList.length;\n\n  for (var typeIndex = 0; typeIndex < priority.length && fieldLeft > 0; typeIndex++) {\n    var type = priority[typeIndex][0];\n    var channelList = priority[typeIndex][1];\n\n    for (var i = 0; i < channelList.length && fieldLeft > 0; i++) {\n      var channel = channelList[i];\n      var field = void 0;\n\n      while (visualElements[channel] > 0 && (field = findBestField(type, fieldRankList))) {\n        if (typeof spec[channel] === 'undefined') {\n          spec[channel] = [];\n        }\n\n        spec[channel].push(field.name);\n        visualElements[channel]--;\n        fieldLeft--;\n        field.choosen = true;\n      }\n    }\n  }\n\n  return spec;\n} // todo:\n// don't use dimScores: FieldImpurity.\n// it's a structure with redundency design.\n\n\nfunction specification(dimScores, aggData, dimensions, measures) {\n  var rankedFields = dimScores.sort(function (a, b) {\n    return a[1] - b[1];\n  }).map(function (dim) {\n    return dim[3];\n  });\n  var spec = aestheticMapping(rankedFields); // todo: design a better rule for choosing geom type.\n\n  if (spec.position.length === 2) {\n    if (dimensions.includes(spec.position[0]) && measures.includes(spec.position[1]) || dimensions.includes(spec.position[1]) && measures.includes(spec.position[0])) {\n      var dimIndex = dimensions.includes(spec.position[0]) ? 0 : 1;\n      var dim = spec.position[dimIndex];\n      var mea = spec.position[(dimIndex + 1) % 2];\n      spec.position = [dim, mea];\n      var dimMembers = memberCount(aggData, dim);\n      spec.geomType = ['interval', 'line', 'area'].filter(function (geom) {\n        return dimMembers.length >= geomTypes[geom][0] && dimMembers.length <= geomTypes[geom][1];\n      });\n      var x = dimScores.find(function (dim) {\n        return dim[0] === spec.position[0];\n      })[3];\n      var y = dimScores.find(function (dim) {\n        return dim[0] === spec.position[1];\n      })[3];\n\n      if (x.type === 'nominal' || y.type === 'nominal') {\n        spec.geomType = ['interval'];\n      }\n    } else {\n      // ['point', 'path', 'heatmap']\n      spec.geomType = ['point', 'density'].filter(function (geom) {\n        return aggData.length >= geomTypes[geom][0] && aggData.length <= geomTypes[geom][1];\n      });\n    }\n  }\n\n  return {\n    schema: spec,\n    aggData: aggData\n  };\n}\n\nexport default specification;","import _toConsumableArray from \"/Users/chenhao/Documents/GitHub/Rath/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\n/**\n *\n * @param matrix adjmatrix\n */\nfunction turnAdjMatrix2List(matrix) {\n  // only for the special matrix here(corelational matrix)\n  var edges = [];\n\n  for (var i = 0; i < matrix.length; i++) {\n    for (var j = i + 1; j < matrix[i].length; j++) {\n      edges.push([[i, j], Math.abs(matrix[i][j])]);\n    }\n  }\n\n  return edges;\n}\n\nfunction find(parents, n) {\n  return parents[n] === n ? n : parents[n] = find(parents, parents[n]);\n}\n\nfunction union(parents, n1, n2) {\n  var p1 = find(parents, n1);\n  var p2 = find(parents, n2);\n  parents[p1] = p2; // I'm too tired. this is just a tmp lazy solution.... will be fixed later.\n  // may check and prove whether it's necessary.\n\n  find(parents, n1);\n  find(parents, n2);\n}\n\nfunction kruskal(_ref) {\n  var matrix = _ref.matrix,\n      groupMaxSize = _ref.groupMaxSize;\n  var edges = turnAdjMatrix2List(matrix);\n  edges.sort(function (a, b) {\n    return b[1] - a[1];\n  });\n  var parents = matrix.map(function (m, i) {\n    return i;\n  });\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = edges[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var edge = _step.value;\n\n      if (find(parents, edge[0][0]) !== find(parents, edge[0][1])) {\n        union(parents, edge[0][0], edge[0][1]);\n      }\n\n      for (var _i = 0; _i < parents.length; _i++) {\n        parents[_i] = find(parents, _i);\n      }\n\n      var set = new Set(parents);\n\n      if (set.size <= groupMaxSize) {\n        break;\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return != null) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  var groups = new Map();\n\n  for (var i = 0; i < parents.length; i++) {\n    if (!groups.has(parents[i])) {\n      groups.set(parents[i], []);\n    }\n\n    groups.get(parents[i]).push(i);\n  }\n\n  return groups;\n}\n\nfunction kruskalMST(matrix) {\n  var maxGroupNumber = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 4;\n  var edges = turnAdjMatrix2List(matrix);\n  edges.sort(function (a, b) {\n    return b[1] - a[1];\n  });\n  var edgesInMST = [];\n  var parents = matrix.map(function (m, i) {\n    return i;\n  });\n\n  var groups = _toConsumableArray(parents);\n\n  var inCutEdge = false;\n  var _iteratorNormalCompletion2 = true;\n  var _didIteratorError2 = false;\n  var _iteratorError2 = undefined;\n\n  try {\n    for (var _iterator2 = edges[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n      var edge = _step2.value;\n\n      if (find(parents, edge[0][0]) !== find(parents, edge[0][1])) {\n        union(parents, edge[0][0], edge[0][1]); // fuck typescript\n        // edgesInMST.push([...edge, inCutEdge]);\n\n        edgesInMST.push([edge[0], edge[1], inCutEdge]);\n      }\n\n      for (var i = 0; i < parents.length; i++) {\n        parents[i] = find(parents, i);\n      }\n\n      var set = new Set(parents); // TODO:\n      // + use kruskalMST instead of kruskal.\n\n      if (set.size <= maxGroupNumber) {\n        inCutEdge = true;\n      } else {\n        groups = _toConsumableArray(parents);\n      }\n\n      if (set.size === 1) {\n        break;\n      }\n    }\n  } catch (err) {\n    _didIteratorError2 = true;\n    _iteratorError2 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n        _iterator2.return();\n      }\n    } finally {\n      if (_didIteratorError2) {\n        throw _iteratorError2;\n      }\n    }\n  }\n\n  return {\n    edgesInMST: edgesInMST,\n    groups: groups\n  };\n}\n\nfunction cluster(_ref2) {\n  var matrix = _ref2.matrix,\n      measures = _ref2.measures,\n      _ref2$method = _ref2.method,\n      method = _ref2$method === void 0 ? 'kruskal' : _ref2$method,\n      _ref2$groupMaxSize = _ref2.groupMaxSize,\n      groupMaxSize = _ref2$groupMaxSize === void 0 ? 4 : _ref2$groupMaxSize;\n  var groups = kruskal({\n    matrix: matrix,\n    groupMaxSize: groupMaxSize\n  });\n  var ans = [];\n  var _iteratorNormalCompletion3 = true;\n  var _didIteratorError3 = false;\n  var _iteratorError3 = undefined;\n\n  try {\n    for (var _iterator3 = groups.values()[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n      var meas = _step3.value;\n      ans.push(meas.map(function (meaIndex) {\n        return measures[meaIndex];\n      }));\n    }\n  } catch (err) {\n    _didIteratorError3 = true;\n    _iteratorError3 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n        _iterator3.return();\n      }\n    } finally {\n      if (_didIteratorError3) {\n        throw _iteratorError3;\n      }\n    }\n  }\n\n  return ans;\n}\n\nexport default cluster;\nexport { kruskalMST };","import _toConsumableArray from \"/Users/chenhao/Documents/GitHub/Rath/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { deepcopy, isFieldNumeric, memberCount } from '../utils';\n\nfunction dropNullColumn(dataSource, fields) {\n  var keepFields = fields.map(function () {\n    return false;\n  });\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = dataSource[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var record = _step.value;\n\n      for (var i = 0; i < fields.length; i++) {\n        var field = fields[i];\n\n        if (typeof record[field] !== 'undefined' && record[field] !== '' && record[field] !== null) {\n          keepFields[i] = true;\n        }\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return != null) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  var finalFields = fields.filter(function (field, index) {\n    return keepFields[index];\n  });\n  return {\n    fields: finalFields,\n    dataSource: dataSource.map(function (record) {\n      var ans = {};\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = finalFields[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var field = _step2.value;\n          ans[field] = record[field];\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      return ans;\n    })\n  };\n}\n\nfunction dropNull(dataSource, dimensions, measures) {\n  var data = [];\n  var _iteratorNormalCompletion3 = true;\n  var _didIteratorError3 = false;\n  var _iteratorError3 = undefined;\n\n  try {\n    for (var _iterator3 = dataSource[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n      var record = _step3.value;\n      var keep = true;\n      var _iteratorNormalCompletion5 = true;\n      var _didIteratorError5 = false;\n      var _iteratorError5 = undefined;\n\n      try {\n        for (var _iterator5 = dimensions[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n          var dim = _step5.value;\n\n          if (typeof record[dim] === 'undefined' || record[dim] === '' || record[dim] === null) {\n            keep = false;\n          }\n        }\n      } catch (err) {\n        _didIteratorError5 = true;\n        _iteratorError5 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion5 && _iterator5.return != null) {\n            _iterator5.return();\n          }\n        } finally {\n          if (_didIteratorError5) {\n            throw _iteratorError5;\n          }\n        }\n      }\n\n      var _iteratorNormalCompletion6 = true;\n      var _didIteratorError6 = false;\n      var _iteratorError6 = undefined;\n\n      try {\n        for (var _iterator6 = measures[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n          var mea = _step6.value;\n\n          if (typeof record[mea] !== 'number') {\n            keep = false;\n          }\n        }\n      } catch (err) {\n        _didIteratorError6 = true;\n        _iteratorError6 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion6 && _iterator6.return != null) {\n            _iterator6.return();\n          }\n        } finally {\n          if (_didIteratorError6) {\n            throw _iteratorError6;\n          }\n        }\n      }\n\n      if (keep) {\n        data.push(record);\n      }\n    }\n  } catch (err) {\n    _didIteratorError3 = true;\n    _iteratorError3 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n        _iterator3.return();\n      }\n    } finally {\n      if (_didIteratorError3) {\n        throw _iteratorError3;\n      }\n    }\n  }\n\n  var _iteratorNormalCompletion4 = true;\n  var _didIteratorError4 = false;\n  var _iteratorError4 = undefined;\n\n  try {\n    var _loop = function _loop() {\n      var dim = _step4.value;\n\n      if (isFieldNumeric(data, dim)) {\n        var members = memberCount(data, dim);\n\n        if (members.length > 20) {\n          data.forEach(function (record) {\n            record[dim] = Number(record[dim]) || 0;\n          });\n        } else {\n          data.forEach(function (record) {\n            record[dim] = (Number(record[dim]) || 0).toString();\n          });\n        }\n      }\n    };\n\n    for (var _iterator4 = dimensions[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n      _loop();\n    }\n  } catch (err) {\n    _didIteratorError4 = true;\n    _iteratorError4 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n        _iterator4.return();\n      }\n    } finally {\n      if (_didIteratorError4) {\n        throw _iteratorError4;\n      }\n    }\n  }\n\n  return data;\n}\n\nfunction isNullValue(value) {\n  return ['', null, undefined].includes(value);\n}\n/**\n * use mode of one field to replace its null value\n * @param dataSource\n * @param fieldNames name list of fields you want to clean with useMode function.\n * problem: some field may regard the null value as the most common value... sad : (.\n * I am dead.\n */\n\n\nfunction useMode(dataSource, fieldNames) {\n  /**\n   * map to count each member's times of apperance in fields.\n   */\n  var countMap = new Map();\n  /**\n   * map to get the mode member of each field.\n   */\n\n  var modeMap = new Map();\n  var _iteratorNormalCompletion7 = true;\n  var _didIteratorError7 = false;\n  var _iteratorError7 = undefined;\n\n  try {\n    for (var _iterator7 = fieldNames[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n      var fieldName = _step7.value;\n      countMap.set(fieldName, new Map());\n      modeMap.set(fieldName, 0);\n    }\n  } catch (err) {\n    _didIteratorError7 = true;\n    _iteratorError7 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion7 && _iterator7.return != null) {\n        _iterator7.return();\n      }\n    } finally {\n      if (_didIteratorError7) {\n        throw _iteratorError7;\n      }\n    }\n  }\n\n  var _iteratorNormalCompletion8 = true;\n  var _didIteratorError8 = false;\n  var _iteratorError8 = undefined;\n\n  try {\n    for (var _iterator8 = dataSource[Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {\n      var record = _step8.value;\n      var _iteratorNormalCompletion11 = true;\n      var _didIteratorError11 = false;\n      var _iteratorError11 = undefined;\n\n      try {\n        for (var _iterator11 = fieldNames[Symbol.iterator](), _step11; !(_iteratorNormalCompletion11 = (_step11 = _iterator11.next()).done); _iteratorNormalCompletion11 = true) {\n          var _fieldName = _step11.value;\n          var counter = countMap.get(_fieldName);\n\n          if (!isNullValue(record[_fieldName])) {\n            if (!counter.has(record[_fieldName])) {\n              counter.set(record[_fieldName], 0);\n            }\n\n            counter.set(record[_fieldName], counter.get(record[_fieldName]) + 1);\n          }\n        }\n      } catch (err) {\n        _didIteratorError11 = true;\n        _iteratorError11 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion11 && _iterator11.return != null) {\n            _iterator11.return();\n          }\n        } finally {\n          if (_didIteratorError11) {\n            throw _iteratorError11;\n          }\n        }\n      }\n    }\n  } catch (err) {\n    _didIteratorError8 = true;\n    _iteratorError8 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion8 && _iterator8.return != null) {\n        _iterator8.return();\n      }\n    } finally {\n      if (_didIteratorError8) {\n        throw _iteratorError8;\n      }\n    }\n  }\n\n  var _iteratorNormalCompletion9 = true;\n  var _didIteratorError9 = false;\n  var _iteratorError9 = undefined;\n\n  try {\n    for (var _iterator9 = countMap.keys()[Symbol.iterator](), _step9; !(_iteratorNormalCompletion9 = (_step9 = _iterator9.next()).done); _iteratorNormalCompletion9 = true) {\n      var key = _step9.value;\n\n      var _counter = countMap.get(key);\n\n      var members = _toConsumableArray(_counter.entries());\n\n      var max = 0;\n      var maxPos = 0;\n\n      for (var i = 0; i < members.length; i++) {\n        var member = members[i];\n\n        if (member[1] > max) {\n          max = member[1];\n          maxPos = i;\n        }\n      }\n\n      modeMap.set(key, members[maxPos][0]);\n    }\n  } catch (err) {\n    _didIteratorError9 = true;\n    _iteratorError9 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion9 && _iterator9.return != null) {\n        _iterator9.return();\n      }\n    } finally {\n      if (_didIteratorError9) {\n        throw _iteratorError9;\n      }\n    }\n  }\n\n  var newDataSource = deepcopy(dataSource);\n  var _iteratorNormalCompletion10 = true;\n  var _didIteratorError10 = false;\n  var _iteratorError10 = undefined;\n\n  try {\n    for (var _iterator10 = newDataSource[Symbol.iterator](), _step10; !(_iteratorNormalCompletion10 = (_step10 = _iterator10.next()).done); _iteratorNormalCompletion10 = true) {\n      var _record = _step10.value;\n      var _iteratorNormalCompletion12 = true;\n      var _didIteratorError12 = false;\n      var _iteratorError12 = undefined;\n\n      try {\n        for (var _iterator12 = fieldNames[Symbol.iterator](), _step12; !(_iteratorNormalCompletion12 = (_step12 = _iterator12.next()).done); _iteratorNormalCompletion12 = true) {\n          var _fieldName2 = _step12.value;\n\n          if (isNullValue(_record[_fieldName2])) {\n            _record[_fieldName2] = modeMap.get(_fieldName2);\n          }\n        }\n      } catch (err) {\n        _didIteratorError12 = true;\n        _iteratorError12 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion12 && _iterator12.return != null) {\n            _iterator12.return();\n          }\n        } finally {\n          if (_didIteratorError12) {\n            throw _iteratorError12;\n          }\n        }\n      }\n    }\n  } catch (err) {\n    _didIteratorError10 = true;\n    _iteratorError10 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion10 && _iterator10.return != null) {\n        _iterator10.return();\n      }\n    } finally {\n      if (_didIteratorError10) {\n        throw _iteratorError10;\n      }\n    }\n  }\n\n  return newDataSource;\n}\n\nfunction simpleClean(dataSource, dimensions, measures) {\n  var newDataSource = deepcopy(dataSource);\n  var _iteratorNormalCompletion13 = true;\n  var _didIteratorError13 = false;\n  var _iteratorError13 = undefined;\n\n  try {\n    for (var _iterator13 = dataSource[Symbol.iterator](), _step13; !(_iteratorNormalCompletion13 = (_step13 = _iterator13.next()).done); _iteratorNormalCompletion13 = true) {\n      var record = _step13.value;\n      var _iteratorNormalCompletion14 = true;\n      var _didIteratorError14 = false;\n      var _iteratorError14 = undefined;\n\n      try {\n        for (var _iterator14 = dimensions[Symbol.iterator](), _step14; !(_iteratorNormalCompletion14 = (_step14 = _iterator14.next()).done); _iteratorNormalCompletion14 = true) {\n          var dim = _step14.value;\n\n          if (isNullValue(record[dim])) {\n            record[dim] = 'null';\n          }\n        }\n      } catch (err) {\n        _didIteratorError14 = true;\n        _iteratorError14 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion14 && _iterator14.return != null) {\n            _iterator14.return();\n          }\n        } finally {\n          if (_didIteratorError14) {\n            throw _iteratorError14;\n          }\n        }\n      }\n\n      var _iteratorNormalCompletion15 = true;\n      var _didIteratorError15 = false;\n      var _iteratorError15 = undefined;\n\n      try {\n        for (var _iterator15 = measures[Symbol.iterator](), _step15; !(_iteratorNormalCompletion15 = (_step15 = _iterator15.next()).done); _iteratorNormalCompletion15 = true) {\n          var mea = _step15.value;\n\n          if (isNullValue(record[mea])) {\n            record[mea] = 0;\n          }\n        }\n      } catch (err) {\n        _didIteratorError15 = true;\n        _iteratorError15 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion15 && _iterator15.return != null) {\n            _iterator15.return();\n          }\n        } finally {\n          if (_didIteratorError15) {\n            throw _iteratorError15;\n          }\n        }\n      }\n    }\n  } catch (err) {\n    _didIteratorError13 = true;\n    _iteratorError13 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion13 && _iterator13.return != null) {\n        _iterator13.return();\n      }\n    } finally {\n      if (_didIteratorError13) {\n        throw _iteratorError13;\n      }\n    }\n  }\n\n  return newDataSource;\n}\n\nexport { simpleClean, dropNull, useMode, dropNullColumn };","import React, { useMemo, useState, useRef } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport { Subspace, FieldSummary } from '../../service';\nimport { DefaultButton, TeachingBubble, DirectionalHint } from 'office-ui-fabric-react';\n\nimport './index.css';\nimport { Field } from '../../global';\nimport { Specification } from '../../demo/vegaBase';\n\ninterface StoryTellerProps {\n  lang?: 'zh' | 'en';\n  dimScores: Array<[string, number, number, Field]>;\n  space: Subspace;\n  spaceList: Subspace[];\n  dimensions: string[];\n  measures: string[];\n  schema: Specification\n}\n\nconst StoryTeller: React.FC<StoryTellerProps> = (props) => {\n  const { space, dimensions = [], measures = [], dimScores = [], spaceList = [], schema } = props;\n  const [isTeachingBubbleVisible, setIsTeachingBubbleVisible] = useState(false);\n  const target = useRef<HTMLElement>();\n  const sortedFieldsScores = useMemo<Array<[string, number, number, Field]>>(() => {\n    return [...dimScores].sort((a, b) => a[1] - b[1]);\n  }, [dimScores])\n  const mostInfluencedDimension = useMemo<string | undefined>(() => {\n    if (typeof space === 'undefined') return;\n    for (let sp of spaceList) {\n      if (sp.dimensions.some(dim => {\n        return space.dimensions.includes(dim)\n      })) {\n        return sp.dimensions.find(dim => {\n          return space.dimensions.includes(dim)\n        })\n      }\n    }\n  }, [])\n  const bestMeasure = useMemo<string | undefined>(() => {\n    if (typeof space === 'undefined') return;\n    const measuresInView = space.measures.filter(mea => measures.includes(mea.name));\n    let min = Infinity;\n    let minPos = 0;\n    for (let i = 0; i < measuresInView.length; i++) {\n      if (measuresInView[i].value < min) {\n        min = measuresInView[i].value;\n        minPos = i;\n      }\n    }\n    return measuresInView[minPos].name;\n  }, [measures, space])\n\n  const countDiffField = useMemo<string | undefined>(() => {\n    let ans = sortedFieldsScores.find(dim => dimensions.includes(dim[0]));\n    return ans ? ans[0] : undefined;\n  }, [sortedFieldsScores, dimensions])\n  const result = `\n  ${ schema && schema.position ? `Current chart mainly focus on the relationship between ***${schema.position[0]}*** and ***${schema.position[1]}***` : ''}\n  ${ dimensions.length > 1 ? `+ DataSource is grouped by ***${dimensions.join(', ')}***, measures(indicators) will propose strong difference of distribution between each other.` : '' }\n  ${ measures.length > 1 ? `+ ***${measures.join(', ')}***are strongly related to each other` : '' }\n  ${ countDiffField ? `+ The distribution of member countings of ***${countDiffField}*** seems to contain more orders and patterns.` : '' }\n  ${ mostInfluencedDimension ? `+ ***${mostInfluencedDimension}*** has great influence on aggregated measure values.` : '' }\n  ${ bestMeasure ? `+ ***${bestMeasure}*** is more likely to have patterns according to its distribution.` : '' }\n  \\`\\`\\\n  `\n  return (\n    <div>\n      <DefaultButton id=\"vis-summary\" text=\"Summary\" onClick={() => { setIsTeachingBubbleVisible(true) }} />\n      {isTeachingBubbleVisible ? (\n          <div>\n            <TeachingBubble\n              calloutProps={{ directionalHint: DirectionalHint.bottomCenter }}\n              isWide={true}\n              hasCloseIcon={true}\n              closeButtonAriaLabel=\"Close\"\n              target={'#vis-summary'}\n              onDismiss={() => { setIsTeachingBubbleVisible(false) }}\n              headline=\"Chart Description\"\n            >\n              <ReactMarkdown source={result} />\n            </TeachingBubble>\n          </div>\n        ) : null}\n    </div>\n  )\n}\n\nexport default StoryTeller","import React, { useEffect, useState, useMemo } from 'react';\nimport { DefaultButton, IconButton, Stack, ProgressIndicator } from 'office-ui-fabric-react';\nimport PreferencePanel, { PreferencePanelConfig } from '../../components/preference';\nimport { useComposeState } from '../../utils/index';\nimport BaseChart, { Specification } from '../../demo/vegaBase';\nimport { DataSource, Field } from '../../global';\nimport { specification } from 'visual-insights';\nimport VisSummary from '../../plugins/visSummary/index';\nimport { useGlobalState } from '../../state';\nimport {\n  Subspace,\n  clusterMeasures,\n  ViewSpace,\n  FieldSummary\n} from '../../service';\n\ninterface PageStatus {\n  show: {\n    insightBoard: boolean;\n    configPanel: boolean;\n    fieldConfig: boolean;\n    dataConfig: boolean;\n  }\n}\ninterface DataView {\n  schema: Specification;\n  aggData: DataSource;\n  fieldFeatures: Field[];\n  dimensions: string[];\n  measures: string[]\n}\n\ninterface GalleryProps {\n  subspaceList: Subspace[];\n  /**\n   * dataSource here should be cookedData.\n   */\n  dataSource: DataSource;\n  summary: {\n    origin: FieldSummary[];\n    grouped: FieldSummary[]\n  },\n}\n\nconst Gallery: React.FC<GalleryProps> = (props) => {\n  const { dataSource, summary, subspaceList } = props;\n  const [currentPage, setCurrentPage] = useState(0);\n  const [state, updateState] = useGlobalState();\n  const [pageStatus, setPageStatus] = useComposeState<PageStatus>({\n    show: {\n      insightBoard: false,\n      fieldConfig: false,\n      configPanel: false,\n      dataConfig: false\n    }\n  });\n  const [visualConfig, setVisualConfig] = useState<PreferencePanelConfig>({\n    aggregator: 'sum',\n    defaultAggregated: true,\n    defaultStack: true\n  })\n  const [viewSpaces, setViewSpaces] = useState<ViewSpace[]>([]);\n\n  const [dataView, setDataView] = useState<DataView>({\n    schema: {\n      position: [],\n      color: [],\n      opacity: [],\n      geomType: []\n    },\n    fieldFeatures: [],\n    aggData: [],\n    dimensions: [],\n    measures: []\n  });\n\n\n\n  const gotoPage = (pageNo: number) => {\n    setCurrentPage(pageNo);\n  }\n  \n  useEffect(() => {\n    updateState(draft => {\n      draft.loading.gallery = true\n    })\n    // todo:\n    // should group number be the same for different subspaces?\n    clusterMeasures(state.maxGroupNumber, subspaceList.map(space => {\n      return {\n        dimensions: space.dimensions,\n        measures: space.measures,\n        matrix: space.correlationMatrix\n      }\n    })).then(viewSpaces => {\n      setViewSpaces(viewSpaces);\n      updateState(draft => {\n        draft.loading.gallery = false\n      })\n    })\n  }, [subspaceList, dataSource, state.maxGroupNumber]);\n  \n  const dimScores = useMemo<[string, number, number, Field][]>(() => {\n    return [...summary.origin, ...summary.grouped].map(field => {\n      return [field.fieldName, field.entropy, field.maxEntropy, { name: field.fieldName, type: field.type }]\n    });\n  }, [summary.origin, summary.grouped]);\n\n  useEffect(() => {\n    const viewState = viewSpaces[currentPage];\n    if (viewState) {\n      const { dimensions, measures } = viewState;\n      try {\n        // todo: find the strict confition instead of using try catch\n        const fieldScores = dimScores.filter(field => {\n          return dimensions.includes(field[0]) || measures.includes(field[0])\n        })\n        const { schema } = specification(fieldScores, dataSource, dimensions, measures)\n        setDataView({\n          schema,\n          fieldFeatures: fieldScores.map(f => f[3]),\n          aggData: dataSource,\n          dimensions,\n          measures\n        })\n        // ugly code\n        // todo:\n        // implement this in specification\n        // + check geomType\n        // + check geom number and aggregated geom number\n        if (schema.geomType && schema.geomType.includes('point')) {\n          setVisualConfig(config => {\n            return {\n              ...config,\n              defaultAggregated: false\n            }\n          })\n        } else {\n          setVisualConfig(config => {\n            return {\n              ...config,\n              defaultAggregated: true\n            }\n          })\n        }\n      } catch (error) {\n        console.log(error)\n      }\n    }\n  }, [viewSpaces, currentPage]);\n  const currentSpace = useMemo<Subspace>(() => {\n    return subspaceList.find(subspace => {\n      return subspace.dimensions.join(',') === dataView.dimensions.join(',')\n    })!\n  }, [subspaceList, currentPage, dataView])\n  return (\n    <div className=\"content-container\">\n      <PreferencePanel show={pageStatus.show.configPanel}\n        config={visualConfig}\n        onUpdateConfig={(config) => {\n          setVisualConfig(config)\n          setPageStatus(draft => { draft.show.configPanel = false })\n        }}\n        onClose={() => { setPageStatus(draft => { draft.show.configPanel = false }) }} />\n      {\n          <div className=\"card\">\n          {\n            (state.loading.gallery || state.loading.subspaceSearching || state.loading.univariateSummary) && <ProgressIndicator description=\"calculating\" />\n          }\n          <h2 style={{marginBottom: 0}}>Visual Insights <IconButton iconProps={{iconName: 'Settings'}} ariaLabel=\"preference\" onClick={() => { setPageStatus(draft => { draft.show.configPanel = true }) }} /></h2>\n          <p className=\"state-description\">Page No. {currentPage + 1} of {viewSpaces.length}</p>\n          <p className=\"state-description\">\n            Details of the recommendation process can be seen in <b>NoteBook</b> Board. You can adjust some of the parameters and operators and see how it influence recommendation results.\n          </p>\n          <p className=\"state-description\">\n            Try to use the setting button beside the \"visual insight\" title to adjust the visualization settings to get a view you prefer better.\n           </p>\n          <div className=\"ms-Grid\" dir=\"ltr\">\n            <div className=\"ms-Grid-row\">\n            <div className=\"ms-Grid-col ms-sm6 ms-md8 ms-lg3\" style={{overflow: 'auto'}}>\n              <Stack horizontal tokens={{ childrenGap: 20 }}>\n                <DefaultButton text=\"Last\" onClick={() => { gotoPage((currentPage - 1 + viewSpaces.length) % viewSpaces.length) }} allowDisabledFocus />\n                <DefaultButton text=\"Next\" onClick={() => { gotoPage((currentPage + 1) % viewSpaces.length) }} allowDisabledFocus />\n              </Stack>\n              <h3>Specification</h3>\n              <pre>\n                {JSON.stringify(dataView.schema, null, 2)}\n              </pre>\n              <VisSummary dimensions={dataView.dimensions} measures={dataView.measures} dimScores={dimScores} space={currentSpace} spaceList={subspaceList} schema={dataView.schema}  />\n            </div>\n            <div className=\"ms-Grid-col ms-sm6 ms-md4 ms-lg9\" style={{overflow: 'auto'}}>\n              <BaseChart\n                aggregator={visualConfig.aggregator}\n                defaultAggregated={visualConfig.defaultAggregated}\n                defaultStack={visualConfig.defaultStack}\n                dimensions={dataView.dimensions}\n                measures={dataView.measures}\n                dataSource={dataView.aggData}\n                schema={dataView.schema}\n                fieldFeatures={dataView.fieldFeatures} />\n            </div>\n            </div>\n          </div>\n        </div>\n      }\n    </div>\n  )\n}\n\nexport default Gallery;","import React, { useRef, useEffect } from 'react';\nimport embed from 'vega-embed';\nimport { FieldType, DataSource } from '../../global';\nexport interface DistributionChartProps {\n  fieldType: FieldType;\n  x: string;\n  y: string;\n  dataSource: DataSource\n}\n\nconst DistributionChart: React.FC<DistributionChartProps> = (props) => {\n  const chart = useRef<HTMLDivElement>(null);\n  const { x, y, dataSource, fieldType } = props;\n    useEffect(() => {\n      if (chart.current) {\n        let values: typeof dataSource = [];\n        let hasIndex = false;\n        if (fieldType === 'ordinal' && dataSource.some(member => {\n          return /(\\[|\\()-?([0-9.]+|Infinity),\\s*([0-9.]+|Infinity)(\\]|\\))/.test(member.memberName)\n        })) {\n          values = dataSource.map(member => {\n            hasIndex = true;\n            let result = /(\\[|\\()(?<left>-?([0-9.]+|Infinity)),\\s*([0-9.]+|Infinity)(\\]|\\))/.exec(member.memberName);\n            \n            return {\n              ...member,\n              index: result === null ? member.name : Number(result.groups!.left)\n            }\n          })\n        } else {\n          values = dataSource\n        }\n        let sortBy: string | undefined | any = undefined;\n        if (fieldType === 'nominal') {\n          sortBy = '-y'\n        } else if (fieldType === 'ordinal' && hasIndex) {\n          sortBy = { field: 'index' }\n        }\n        embed(chart.current, {\n          background: '#fff',\n          data: {\n            values\n          },\n          height: 120,\n          width: 200,\n          mark: ['quantitative', 'temporal'].includes(fieldType) ? 'line' : 'bar',\n          encoding: {\n            x: {\n              field: x,\n              axis: dataSource.length > 16 ? null : undefined,\n              type: fieldType, sort: sortBy\n            },\n            y: { field: y, type: 'quantitative', aggregate: 'sum' }\n          }\n        }, {\n          actions: false\n        })\n      }\n    }, [x, y, dataSource])\n  return <div ref={chart}></div>\n}\n\nexport default DistributionChart;","import React, { useMemo } from 'react';\nimport { DetailsList, SelectionMode, IColumn, Icon, HoverCard, IExpandingCardProps } from 'office-ui-fabric-react';\nimport chroma, { Color } from 'chroma-js';\nimport { FieldSummary } from '../../service';\nimport DistributionChart from './distributionChart';\nimport { FieldType, Record } from '../../global';\n\nimport './fieldAnalysis.css';\n\n// todo: distribution info\n\ninterface FieldAnalsisProps {\n  originSummary: FieldSummary[];\n  groupedSummary: FieldSummary[];\n}\nconst columns: IColumn[] = [\n  {\n    key: 'fieldName',\n    name: 'fieldName',\n    fieldName: 'fieldName',\n    minWidth: 70,\n    maxWidth: 150\n  },\n  {\n    key: 'type',\n    name: 'type',\n    fieldName: 'type',\n    minWidth: 50\n  },\n  {\n    key: 'entropy',\n    name: 'entropy',\n    fieldName: 'entropy',\n    minWidth: 120\n  },\n  {\n    key: 'maxEntropy',\n    name: 'maxEntropy',\n    fieldName: 'maxEntropy',\n    minWidth: 120\n  }\n];\nfunction getIconNameByFieldType (type: string): string {\n  switch (type) {\n    case 'nominal':\n      return 'TextField';\n    case 'quantitative':\n      return 'NumberField';\n    case 'ordinal':\n      return 'Breadcrumb';\n    case 'temporal':\n      return 'EventDate';\n    default:\n      return ''\n  }\n}\n\nfunction getValueColor (value: number, range: [number, number]): [number, number, number] {\n  return chroma.scale('YlGnBu').domain([range[1], range[0]])(value).rgb();\n}\n\n/**\n * \n * @param color rgb array\n * algorithm provided by https://stackoverflow.com/questions/1855884/determine-font-color-based-on-background-color\n */\nfunction contrastColor(color: [number, number, number]): [number, number, number] {\n  let luminance = (0.299 * color[0] + 0.587 * color[1] + 0.114 * color[2]) / 255;\n  return luminance > 0.5 ? [0, 0, 0] : [255, 255, 255]\n}\nconst FieldAnalsis: React.FC<FieldAnalsisProps> = (props) => {\n\n  const { originSummary, groupedSummary } = props;\n\n  const entropyRange = useMemo<[number, number]>(() => {\n    const originEntropy = originSummary.map(s => s.maxEntropy);\n    return [0, Math.max(...originEntropy)];\n  }, [originSummary])\n\n  const onRenderCompactCard = (item: Record) => {\n    return (\n      <div className=\"field-hover-card\">\n        <h2>{item.fieldName}</h2>\n        <div>Field entropy is { Number(item.entropy).toFixed(2) }</div>\n        <div className=\"chart-vertical-margin-container\" >\n          <DistributionChart x=\"memberName\" y=\"count\" fieldType={item.type as FieldType} dataSource={item.distribution} />\n        </div>\n        \n      </div>\n    )\n  }\n  const onRenderExpandedCard = (item: Record) => {\n    const name = item.fieldName;\n    const target = groupedSummary.find(s => s.fieldName === name + '(group)')\n    return (\n      <div className=\"field-hover-card\">\n        {\n          target ? <div>\n            <h3>{target.fieldName}</h3>\n            <div>Field entropy is { Number(target.entropy).toFixed(2) }</div>\n            <div className=\"chart-vertical-margin-container\">\n              <DistributionChart x=\"memberName\" y=\"count\" fieldType={target.type as FieldType} dataSource={target.distribution} />\n            </div>\n          </div> : <div>This field is not grouped.</div>\n        }\n      </div>\n    )\n  }\n\n\n\n  const renderItemColumn = (item: Record, index?: number, column?: IColumn) => {\n    if (column !== undefined) {\n      const name = item.fieldName;\n      const target = groupedSummary.find(s => s.fieldName === name + '(group)')\n      const expandingCardProps: IExpandingCardProps = {\n        onRenderCompactCard,\n        onRenderExpandedCard,\n        renderData: item,\n        compactCardHeight: 320,\n        expandedCardHeight: target ? 320 : 40\n      }\n      const fieldContent = item[column.fieldName!];\n      let bgColor: [number, number, number] = [255, 255, 255];\n      switch (column.key) {\n        case 'type':\n          return <div>\n            <Icon iconName={getIconNameByFieldType(fieldContent)} /> {fieldContent}\n          </div>\n        case 'entropy':\n        case 'maxEntropy':\n          bgColor = getValueColor(item[column.key], entropyRange);\n          let fontColor = contrastColor(bgColor)\n          let bgColorStr = `rgb(${bgColor.join(',')})`\n          let fontColorStr = `rgb(${contrastColor(bgColor).join(',')})`\n          return (\n            <HoverCard expandedCardOpenDelay={800} expandingCardProps={expandingCardProps} instantOpenOnClick={true}>\n              <div style={{ boxShadow: `${bgColorStr} 0px 0px 0px 10px`, backgroundColor: bgColorStr, color: fontColorStr }}>{fieldContent}</div>\n            </HoverCard>\n          )\n        default:\n          return <HoverCard expandedCardOpenDelay={800} expandingCardProps={expandingCardProps} instantOpenOnClick={true}>\n          <div>{fieldContent}</div>\n        </HoverCard>\n      }\n    }\n  }\n\n  // const onRenderRow: IRenderFunction<any> = (props) => {\n  //   const customStyles: Partial<IDetailsRowStyles> = {};\n  //   customStyles.root = { backgroundColor: getValueColor(props.item['entropy'], entropyRange), color: '#fff' }\n  //   return <DetailsRow {...props} styles={customStyles} />;\n  // };\n\n  return <DetailsList compact={true} columns={columns} items={originSummary} selectionMode={SelectionMode.none} onRenderItemColumn={renderItemColumn} />\n}\n\nexport default FieldAnalsis;","import React, { useRef, useMemo, useEffect, useState } from 'react';\nimport { Subspace } from '../../service';\nimport { DetailsList, SelectionMode, IColumn, Icon, IDetailsRowProps, IDetailsRowStyles, DetailsRow, IRenderFunction, HoverCard, IExpandingCardProps } from 'office-ui-fabric-react';\nimport embed from 'vega-embed';\nimport { DataSource } from '../../global';\n\nfunction encodeArr (arr: any[]): string {\n  return arr.join(',')\n}\ninterface IndexSubspace extends Subspace {\n  index: number\n}\ninterface SubspacesProps {\n  subspaceList: Subspace[];\n  onSpaceChange: (dimensions: string[], measures: string[], matrix: number[][]) => void\n}\nconst Subspaces: React.FC<SubspacesProps> = (props) => {\n  const { subspaceList, onSpaceChange } = props;\n  console.log(subspaceList)\n  const [curIndex, setCurIndex] = useState(0);\n  const spaceChart = useRef<HTMLDivElement>(null)\n  const relationChart = useRef<HTMLDivElement>(null)\n  // const subspaces = useMemo<IndexSubspace[]>(() => {\n  //   return subspaceList.map((space, index) => {\n  //     return {\n  //       ...space,\n  //       index\n  //     }\n  //   })\n  // }, [subspaceList]);\n  const range = useMemo<[number, number]>(() => {\n    let max = 0;\n    let min = Infinity;\n    for (let space of subspaceList) {\n      for (let { name, value } of space.measures) {\n        max = Math.max(max, value);\n        min = Math.min(min, value);\n      }\n    }\n    return [min, max]\n  }, [subspaceList])\n  const values = useMemo<DataSource>(() => {\n    let ans = [];\n    // todos:\n    // the fold operation here is a tmp solution. it is designed when I don't there is a api in vega to handle event listener.\n    // the fold operation here can caused a wasted of time and space.\n    // I suggested to divied it into two charts and connect the logic throgh a state manager outside the charts.\n    for (let i = 0; i < subspaceList.length; i++) {\n      let space = subspaceList[i];\n      let dimensions = encodeArr(space.dimensions)\n      for (let { name, value } of space.measures) {\n        let record: any = {\n          test: i,\n          score: space.score,\n          dimensions,\n          measureName: name,\n          measureValue: value,\n        };\n        ans.push(record)\n      }\n    }\n    return ans\n  }, [subspaceList, range])\n  useEffect(() => {\n    if (spaceChart.current && subspaceList.length > 0) {\n      embed(spaceChart.current, {\n        data: {\n          values\n        },\n        vconcat: [\n          {\n            mark: 'rect',\n            selection: {\n              dim: {\n                type: 'single',\n                on: 'click',\n                encodings: ['y']\n              }\n            },\n            encoding: {\n              x: { field: 'measureName', type: 'nominal' },\n              y: {\n                field: 'dimensions',\n                type: 'ordinal',\n                sort: { field: 'score' }\n              },\n              color: { field: 'measureValue', type: 'quantitative', aggregate: 'mean', scale: { reverse: true } },\n              opacity: {\n                condition: {selection: 'dim', value: 1},\n                value: 0.72\n              },\n            }\n          }\n        ]\n      }).then(res => {\n        res.view.addEventListener('click', function (e, item) {\n          if (item) {\n            /**\n             * record is the data record(defiend in `values`) the event contains.\n             */\n            let record = item.datum;\n            let index = subspaceList.findIndex(space => encodeArr(space.dimensions) === record.dimensions)\n\n            if (index > -1) {\n              let targetSpace = subspaceList[index];\n              onSpaceChange(targetSpace.dimensions, targetSpace.measures.map(m => m.name), targetSpace.correlationMatrix);\n              setCurIndex(index);\n            }\n          }\n        })\n      })\n    }\n  }, [subspaceList, values])\n  useEffect(() => {\n    let space = subspaceList[curIndex];\n    if (relationChart.current && subspaceList.length > 0 && space) {\n      let matrix: DataSource = [];\n      \n      for (let i = 0; i < space.correlationMatrix.length; i++) {\n          for (let j = 0; j < space.correlationMatrix[i].length; j++) {\n            matrix.push({\n              x: space.measures[i].name,\n              y: space.measures[j].name,\n              correlation: space.correlationMatrix[i][j]\n            })\n          }\n        }\n      embed(relationChart.current, {\n        data: {\n          values: matrix\n        },\n        mark: 'rect',\n        encoding: {\n          x: { field: 'x', type: 'nominal' },\n          y: { field: 'y', type: 'nominal' },\n          color: { field: 'correlation', type: 'quantitative', aggregate: 'mean' , scale: { scheme: 'redyellowgreen', domain: [-1, 1] } }\n        }\n      })\n    }\n    \n  }, [subspaceList, curIndex])\n  return <div>\n    <div ref={spaceChart}></div>\n    <div ref={relationChart}></div>\n  </div>\n}\n\nexport default Subspaces;","import React, { useEffect, useMemo, useRef } from 'react';\nimport { kruskalMST } from 'visual-insights';\nimport { useGlobalState } from '../../state';\nimport embed from 'vega-embed';\n// cluster should be used for small graph because the number of measure is limited. \n// Browser may be more likely crashed by other algorithm or data structure or memory used in the whole analysis pipline.\n/**\n * adjMatrix and measures share a common index system;\n */\ninterface ClusterBoardProps {\n  adjMatrix: number[][];\n  measures: string[];\n  onFocusGroup: (measuresInView: string[]) => void;\n}\n\ninterface VegaEdge {\n  source: number | string;\n  target: number | string;\n  value: number;\n  inCutEdge: boolean;\n}\ninterface VegaNode {\n  name: string;\n  index: number;\n  value: number;\n  group: number;\n}\ninterface TreeData { \n  nodes: VegaNode[];\n  edges: VegaEdge[]\n}\nconst ClusterBoard: React.FC<ClusterBoardProps> = (props) => {\n  const { adjMatrix, measures, onFocusGroup } = props;\n  const [state, updateState] = useGlobalState();\n  const chart = useRef<HTMLDivElement>(null);\n  // const groups = useMemo<string[][]>(() => {\n  //   return clusterMeasures({\n  //     matrix: adjMatrix,\n  //     measures,\n  //   })\n  // }, [adjMatrix, measures]);\n  const clusterResult = useMemo(() => {\n    /**\n     * todo: \n     * maxGroupNumber = the measures length / max visual channel for measure.\n     */\n    let maxGroupNumber = state.maxGroupNumber\n    let { edgesInMST, groups } = kruskalMST(adjMatrix, maxGroupNumber);\n    return { edgesInMST, groups }\n  }, [adjMatrix, state.maxGroupNumber])\n  const treeData = useMemo<TreeData>(() => {\n    let { edgesInMST, groups } = clusterResult;\n    const edges: VegaEdge[] = edgesInMST.map(edge => {\n      return {\n        source: edge[0][0],\n        target: edge[0][1],\n        value: 1 / edge[1],\n        inCutEdge: edge[2]\n      }\n    });\n    const nodes: VegaNode[] = [];\n    for (let i = 0; i < groups.length; i++) {\n      nodes.push({\n        name: measures[i],\n        index: i,\n        value: 1,\n        group: groups[i]\n      })\n    }\n    return {\n      nodes,\n      edges\n    }\n  }, [measures, clusterResult])\n  useEffect(() => {\n    if (chart.current && measures.length > 0) {\n      embed(chart.current, {\n        \"$schema\": \"https://vega.github.io/schema/vega/v5.json\",\n        \"width\": 700,\n        \"height\": 500,\n        \"padding\": 0,\n        \"autosize\": \"none\",\n      \n        \"signals\": [\n          { \"name\": \"cx\", \"update\": \"width / 2\" },\n          { \"name\": \"cy\", \"update\": \"height / 2\" },\n          {\n            \"description\": \"State variable for active node fix status.\",\n            \"name\": \"fix\", \"value\": false,\n            \"on\": [\n              {\n                \"events\": \"text:mouseout[!event.buttons], window:mouseup\",\n                \"update\": \"false\"\n              },\n              {\n                \"events\": \"text:mouseover\",\n                \"update\": \"fix || true\"\n              },\n              {\n                \"events\": \"[text:mousedown, window:mouseup] > window:mousemove!\",\n                \"update\": \"xy()\",\n                \"force\": true\n              }\n            ]\n          },\n          {\n            \"description\": \"Graph node most recently interacted with.\",\n            \"name\": \"node\", \"value\": null,\n            \"on\": [\n              {\n                \"events\": \"text:mouseover\",\n                \"update\": \"fix === true ? item() : node\"\n              }\n            ]\n          },\n          {\n            \"description\": \"Flag to restart Force simulation upon data changes.\",\n            \"name\": \"restart\", \"value\": false,\n            \"on\": [\n              {\"events\": {\"signal\": \"fix\"}, \"update\": \"fix && fix.length\"}\n            ]\n          }\n        ],\n      \n        \"data\": [\n          {\n            \"name\": \"node-data\",\n            values: treeData.nodes,\n          },\n          {\n            \"name\": \"link-data\",\n            values: treeData.edges\n          }\n        ],\n      \n        \"scales\": [\n          {\n            \"name\": \"color\",\n            \"type\": \"ordinal\",\n            \"domain\": {\"data\": \"node-data\", \"field\": \"group\"},\n            \"range\": {\"scheme\": \"tableau20\"}\n          }\n        ],\n      \n        \"marks\": [\n          {\n            \"name\": \"nodes\",\n            \"type\": \"text\",\n            \"zindex\": 1,\n      \n            \"from\": {\"data\": \"node-data\"},\n            \"on\": [\n              {\n                \"trigger\": \"fix\",\n                \"modify\": \"node\",\n                \"values\": \"fix === true ? {fx: node.x, fy: node.y} : {fx: fix[0], fy: fix[1]}\"\n              },\n              {\n                \"trigger\": \"!fix\",\n                \"modify\": \"node\", \"values\": \"{fx: null, fy: null}\"\n              }\n            ],\n      \n            \"encode\": {\n              \"enter\": {\n                \"fill\": {\"scale\": \"color\", \"field\": \"group\"},\n                \"text\": {\"field\": \"name\"},\n                \"fontSize\": {\"value\": 14},\n                \"fontWeight\": {\"value\": 600}\n              },\n              \"update\": {\n                \"cursor\": {\"value\": \"pointer\"}\n              }\n            },\n      \n            \"transform\": [\n              {\n                \"type\": \"force\",\n                \"iterations\": 300,\n                \"restart\": {\"signal\": \"restart\"},\n                \"signal\": \"force\",\n                \"forces\": [\n                  {\"force\": \"center\", \"x\": {\"signal\": \"cx\"}, \"y\": {\"signal\": \"cy\"}},\n                  {\"force\": \"collide\" },\n                  {\"force\": \"nbody\" },\n                  {\"force\": \"link\", \"links\": \"link-data\" }\n                ]\n              }\n            ]\n          },\n          {\n            \"type\": \"path\",\n            \"from\": {\"data\": \"link-data\"},\n            \"interactive\": false,\n            \"encode\": {\n              \"update\": {\n                \"stroke\": {\n                  signal: \"datum.inCutEdge == true ? '#f5f5f5' : '#d9d9d9' \"\n                },\n                \"strokeWidth\": {\"value\": 0.8}\n              },\n            },\n            \"transform\": [\n              {\n                \"type\": \"linkpath\",\n                \"require\": {\"signal\": \"force\"},\n                \"shape\": \"line\",\n                \"sourceX\": \"datum.source.x\", \"sourceY\": \"datum.source.y\",\n                \"targetX\": \"datum.target.x\", \"targetY\": \"datum.target.y\"\n              }\n            ]\n          }\n        ]\n      }).then(res => {\n        res.view.addEventListener('click', function (e, item) {\n          if (item) {\n            let record = item.datum;\n            let group = record.group;\n            let measuresInView = measures.filter((mea, index) => {\n              return clusterResult.groups[index] === group\n            });\n            onFocusGroup(measuresInView);\n          }\n        })\n      })\n    }\n  }, [treeData, measures])\n  return <div ref={chart}>\n  </div>\n}\n\nexport default ClusterBoard;","import React, { useMemo, useState, useEffect } from 'react';\nimport { DataSource, Field } from '../../global';\nimport FieldAnalysisBoard from './fieldAnalysis';\nimport Subspaces from './subspaces';\nimport { FieldSummary, Subspace, combineFieldsService } from '../../service';\nimport ClusterBoard from './cluster';\nimport { specification } from 'visual-insights';\nimport { ProgressIndicator, Toggle, Slider } from 'office-ui-fabric-react';\nimport { useGlobalState } from '../../state';\nimport VegaBase from '../../demo/vegaBase';\nimport './index.css';\nconst maxMeasureInView = 4;\ninterface NoteBookProps {\n  dataSource: DataSource;\n  // dimScores: [string, number, number, Field][],\n  summary: {\n    origin: FieldSummary[];\n    grouped: FieldSummary[]\n  };\n  subspaceList: Subspace[]\n}\nconst NoteBook: React.FC<NoteBookProps> = (props) => {\n  const { summary, subspaceList, dataSource } = props;\n  const [state, updateState] = useGlobalState();\n  const [isAggregated, setIsAggregated] = useState(false);\n  interface ClusterState {\n    measures: string[];\n    dimensions: string[];\n    matrix: number[][];\n  }\n  const [clusterState, setClusterState] = useState<ClusterState>({\n    measures: [],\n    dimensions: [],\n    matrix: []\n  })\n\n  const [measuresInView, setMeasuresInView] = useState<string[]>([]);\n\n\n  // todo:\n  // should be updated after designing new specification api\n  const dimScores = useMemo<[string, number, number, Field][]>(() => {\n    return [...summary.origin, ...summary.grouped].map(field => {\n      return [field.fieldName, field.entropy, field.maxEntropy, { name: field.fieldName, type: field.type }]\n    });\n  }, [summary.origin, summary.grouped])\n\n  const spec = useMemo(() => {\n    const { dimensions, measures } = clusterState;\n    // todo\n    // this condition is not strict enough. dimScores should share same elements with dimensions and measures.\n    // maybe use try catch in future\n    try {\n      /**\n       * fieldScores is the scores info for the dims and meas in current view.\n       * dimensions should get the grouped new field.\n       * measures shall never use the grouped field.\n       */\n      const fieldScores = dimScores.filter(field => {\n        return dimensions.includes(field[0]) || measuresInView.includes(field[0])\n      })\n      const { schema } = specification(fieldScores, dataSource, dimensions, measuresInView)\n      return schema;\n    } catch (error) {\n      console.log(error)\n      return {\n        position: []\n      }\n    }\n\n  }, [dimScores, clusterState, dataSource, measuresInView])\n  useEffect(() => {\n    updateState(draft => {\n      draft.maxGroupNumber = Math.round(state.cookedMeasures.length / maxMeasureInView)\n    })\n  }, [state.cookedMeasures])\n  return <div>\n    <h3 className=\"notebook header\">Univariate Summary</h3>\n    <p className=\"state-description\">Hover your mouse over the fields and see the distails and entropy reducing strategy.</p>\n    {state.loading.univariateSummary && <ProgressIndicator description=\"analyzing\" />}\n    <div className=\"notebook content container\">\n      <FieldAnalysisBoard originSummary={summary.origin} groupedSummary={summary.grouped} />\n    </div>\n\n    <h3 className=\"notebook header\">Subspace Searching</h3>\n    <p className=\"state-description\">Try to choose one row(combination of dimensions) of the subspace and see the changes of the processes below.</p>\n    {state.loading.subspaceSearching && <ProgressIndicator description=\"analyzing\" />}\n    {!state.loading.subspaceSearching && <Slider value={state.topK.dimensionSize * 100} label=\"top k percent dimension used\" max={100} valueFormat={(value: number) => `${value}%`} showValue={true}\n      onChange={(value: number) => {\n        updateState(draft => {\n          draft.topK.dimensionSize = value / 100;\n        })\n        const selectedDimensions = state.cookedDimensions.slice(0, Math.round(state.cookedDimensions.length * value / 100));\n        combineFieldsService(dataSource, selectedDimensions, state.cookedMeasures, 'sum')\n          .then(subspaces => {\n            if (subspaces) {\n              updateState(draft => {\n                draft.subspaceList = subspaces\n              })\n            }\n          })\n      }}/>}\n      {\n        !state.loading.subspaceSearching && <Slider value={state.topK.subspacePercentSize * 100} label=\"top k percent subspace used\" max={100} valueFormat={(value: number) => `${value}%`} showValue={true}\n        onChange={(value: number) => {\n          updateState(draft => {\n            draft.topK.subspacePercentSize = value / 100;\n          })\n        }}/>\n      }\n    <div className=\"notebook content center container\">\n      <Subspaces subspaceList={subspaceList.slice(0, Math.round(subspaceList.length * state.topK.subspacePercentSize))} onSpaceChange={(dimensions, measures, matrix) => {\n        setClusterState({\n          dimensions,\n          measures,\n          matrix\n        })\n      }} />\n    </div>\n\n    <h3 className=\"notebook header\">Measurement Clustering</h3>\n    <p className=\"state-description\">Try to choose one group to visualize them.</p>\n    <Slider\n      label=\"Max Group Number\"\n      min={1}\n      max={state.cookedMeasures.length || 4}\n      step={1}\n      // defaultValue={clusterState.measures.length / 4}\n      value={state.maxGroupNumber}\n      showValue={true}\n      onChange={(value: number) => { updateState(draft => {\n        draft.maxGroupNumber = value\n      })}}\n    />\n    <div className=\"notebook content center container\">\n      <ClusterBoard adjMatrix={clusterState.matrix} measures={clusterState.measures} onFocusGroup={(measInView) => { setMeasuresInView(measInView); console.log('view in measures', measInView) }} />\n    </div>\n\n    <h3 className=\"notebook header\">Visualization</h3>\n    <p className=\"state-description\">\n      If there is no result here, try to click one group of measures in <b>Clustering</b> process above.\n    </p>\n    <Toggle checked={isAggregated} label=\"aggregate measures\" defaultChecked onText=\"On\" offText=\"Off\" onChange={(e, checked: boolean | undefined) => {setIsAggregated(!!checked)}} />\n    <div className=\"notebook content center container\">\n      <VegaBase defaultAggregated={isAggregated} defaultStack={true} aggregator={'sum'}\n        schema={spec}\n        fieldFeatures={dimScores.map(dim => dim[3])}\n        dataSource={dataSource}\n        dimensions={clusterState.dimensions} measures={measuresInView} />\n    </div>\n\n  </div>\n}\n\nexport default NoteBook;","import React from 'react';\nimport { DetailsList, SelectionMode } from 'office-ui-fabric-react';\nimport { DataSource, BIField, BIFieldType } from '../global';\nexport interface DataTableProps {\n  dataSource: DataSource,\n  fields: BIField[]\n}\nconst DataTable: React.FC<DataTableProps> = (props) => {\n  const { dataSource = [], fields = [] } = props;\n  let columns = fields.map(field => {\n    return {\n      key: field.name,\n      name: field.name,\n      fieldName: field.name,\n      minWidth: 70,\n      maxHeight: 90\n    }\n  });\n\n  return <div style={{maxHeight: 400, overflow: 'auto'}}>\n    <DetailsList items={dataSource} columns={columns} selectionMode={SelectionMode.none} />\n  </div>\n}\n\nexport default DataTable;","import React, { useState, useEffect } from 'react';\nimport { PrimaryButton, Panel, PanelType, Toggle } from 'office-ui-fabric-react';\n\nimport { BIField, BIFieldType } from '../global';\n\ninterface FieldPanelProps {\n  show: boolean;\n  onClose: () => void;\n  onUpdateConfig: (fields: BIField[]) => void;\n  fields: BIField[];\n}\nconst FieldPanel: React.FC<FieldPanelProps> = (props) => {\n  const {\n    show = false,\n    // fields = [],\n    onUpdateConfig,\n    onClose\n  } = props;\n  const [fields, setFields] = useState<BIField[]>([])\n  useEffect(() => {\n    setFields(props.fields)\n  }, [props.fields])\n  \n  function updateFieldType(field: BIField, type: BIFieldType) {\n    setFields(fields => {\n      return fields.map(f => {\n        if (field.name === f.name) {\n          return {\n            name: field.name,\n            type\n          }\n        } else {\n          return f\n        }\n      })\n    })\n  }\n\n  const onRenderFooterContent = () => <div>\n    <PrimaryButton onClick={() => { onUpdateConfig(fields); onClose(); }}>\n      Save\n    </PrimaryButton>\n  </div>\n  \n  return <Panel\n    isOpen={show}\n    type={PanelType.smallFixedFar}\n    onDismiss={onClose}\n    headerText=\"Meta Config\"\n    closeButtonAriaLabel=\"Close\"\n    onRenderFooterContent={onRenderFooterContent}\n  >\n    <div>\n      {\n        fields.map(field => <Toggle key={field.name} checked={field.type === 'dimension'} label={field.name} onText=\"dimension\" offText=\"measure\" onChange={(e, checked) => { updateFieldType(field, checked ? 'dimension' : 'measure')}} />)\n      }\n    </div>\n  </Panel>\n}\n\nexport default FieldPanel;\n","import { Cleaner } from 'visual-insights';\nimport { DataSource } from '../../global';\n\n// todo\n// cleanMethodList has redundency.\n// clean method type, cleanData(switch), cleanMethodList should be maintained in one structure.\nexport type CleanMethod = 'dropNull' | 'useMode' | 'simpleClean';\nexport function cleanData (dataSource: DataSource, dimensions: string[], measures: string[], method: CleanMethod): DataSource {\n  // hint: dropNull works really bad when we test titanic dataset.\n  // useMode fails when there are more null values than normal values;\n  switch (method) {\n    case 'dropNull':\n      return Cleaner.dropNull(dataSource, dimensions, measures);\n    case 'useMode':\n      // todo: bad props design\n      return Cleaner.useMode(dataSource, dimensions.concat(measures));  \n    case 'simpleClean':\n    default:\n      return Cleaner.simpleClean(dataSource, dimensions, measures);\n  }\n}\n\nexport const cleanMethodList: Array<{ key: CleanMethod; text: string }> = [\n  { key: 'dropNull', text: 'drop null records' },\n  { key: 'useMode', text: 'replace null with mode' },\n  { key: 'simpleClean', text: 'simple cleaning' }\n]\n","import React, { useMemo } from 'react';\nimport { BIField, DataSource, Record } from '../../global';\nimport { Transform } from '../../utils/index'\nimport {  cleanData,  CleanMethod } from './clean';\nimport { deepcopy } from '../../utils/index';\n\n\nexport function useDataSource (rawData: DataSource, fields: BIField[], cleanMethod: CleanMethod): [DataSource, DataSource] {\n  const dimensions = useMemo<string[]>(() => {\n    return fields.filter(field => field.type === 'dimension').map(field => field.name)\n  }, [fields])\n\n  const measures = useMemo<string[]>(() => {\n    return fields.filter(field => field.type === 'measure').map(field => field.name)\n  }, [fields])\n\n  const dataSource = useMemo<DataSource>(() => {\n    return rawData.map(row => {\n      let record: Record = {}\n      fields.forEach(field => {\n        record[field.name] = field.type === 'dimension' ? row[field.name] : Transform.transNumber(row[field.name])\n      })\n      return record\n    })\n  }, [rawData, fields])\n\n  const preparedData = useMemo<DataSource>(() => {\n    return cleanData(deepcopy(dataSource), dimensions, measures, cleanMethod);\n  }, [dimensions, measures, dataSource, cleanMethod])\n\n  return [dataSource, preparedData]\n}","// todo replace the deepcopy with a safe and faster one.\nexport default function deepcopy(dataSource: any) {\n  return JSON.parse(JSON.stringify(dataSource))\n}","import React, { useState, useRef } from \"react\";\nimport { useGlobalState } from \"../../state\";\nimport { FileLoader, useComposeState } from '../../utils/index';\nimport { ComboBox, DefaultButton, IconButton, Callout, Stack, CommandBar } from 'office-ui-fabric-react';\nimport DataTable from '../../components/table';\nimport FieldPanel from '../../components/fieldConfig';\nimport { DataSource,  BIField } from '../../global';\nimport {  cleanMethodList, CleanMethod } from './clean';\nimport { Cleaner } from 'visual-insights';\nimport { useDataSource } from './useDataSource';\n\ninterface PageStatus {\n  show: {\n    insightBoard: boolean;\n    configPanel: boolean;\n    fieldConfig: boolean;\n    dataConfig: boolean;\n  }\n}\n\ninterface DataSourceBoardProps {\n  onExtractInsights: () => void;\n}\n\nconst DataSourceBoard: React.FC<DataSourceBoardProps> = (props) => {\n  const [state,updateState, dispatch] = useGlobalState();\n  const [pageStatus, setPageStatus] = useComposeState<PageStatus>({\n    show: {\n      insightBoard: false,\n      fieldConfig: false,\n      configPanel: false,\n      dataConfig: false\n    }\n  })\n  const [cleanMethod, setCleanMethod] = useState<CleanMethod>('dropNull');\n\n  const dataSetting = useRef<HTMLDivElement>(null);\n  const fileEle = useRef<HTMLInputElement>(null);\n\n  const [dataSource, preparedData] = useDataSource(state.rawData, state.fields, cleanMethod);\n\n  async function fileUploadHanlder () {\n    if (fileEle.current !== null && fileEle.current.files !== null) {\n      const file = fileEle.current.files[0];\n      /**\n       * tmpFields is fields cat by specific rules, the results is not correct sometimes, waitting for human's input\n       */\n      let tmpFields: BIField[] = [];\n      let rawData: DataSource = [];\n\n      if (file.type === 'text/csv' || file.type === 'application/vnd.ms-excel') {\n        rawData = await FileLoader.csvLoader(file);\n      } else if (file.type === 'application/json') {\n        rawData = await FileLoader.jsonLoader(file);\n      } else {\n        throw new Error(`unsupported file type=${file.type} `)\n      }\n      rawData = Cleaner.dropNullColumn(rawData, Object.keys(rawData[0])).dataSource;\n      tmpFields = Object.keys(rawData[0]).map(fieldName => {\n        return {\n          name: fieldName,\n          type: rawData.every(row => {\n            return !isNaN(row[fieldName]) || row[fieldName] === undefined;\n          }) ? 'measure' : 'dimension'\n        }\n      });\n      updateState(draft => {\n        draft.fields = tmpFields;\n        draft.rawData = rawData;\n      })\n    }\n  }\n  // const analysisHandler = startAnalysis(preparedData, state.fields);\n\n  const commandBarList = [\n    {\n      key: 'upload',\n      name: 'Upload',\n      iconProps: { iconName: 'Upload' },\n      onClick: () => {\n        if (fileEle.current) {\n          fileEle.current.click();\n        }\n      }\n    }\n  ]\n\n  return (\n    <div className=\"content-container\">\n      <FieldPanel\n        fields={state.fields}\n        show={pageStatus.show.fieldConfig}\n        onUpdateConfig={fields => {\n          updateState(draft => {\n            draft.fields = fields;\n          });\n        }}\n        onClose={() => {\n          setPageStatus(draft => {\n            draft.show.fieldConfig = false;\n          });\n        }}\n      />\n      <div className=\"card\">\n        <Stack horizontal>\n          <DefaultButton\n            disabled={dataSource.length === 0}\n            iconProps={{ iconName: \"Financial\" }}\n            text=\"Extract Insights\"\n            onClick={() => {\n              dispatch('extractInsights', {\n                dataSource: preparedData,\n                fields: state.fields\n              })\n              props.onExtractInsights();\n            }}\n          />\n          <div ref={dataSetting}>\n            <IconButton\n              iconProps={{ iconName: \"ExcelDocument\" }}\n              ariaLabel=\"upload data\"\n              onClick={() => {\n                setPageStatus(draft => {\n                  draft.show.dataConfig = true;\n                });\n              }}\n            />\n            <Callout\n              style={{ maxWidth: 300 }}\n              className=\"vi-callout-callout\"\n              role=\"alertdialog\"\n              gapSpace={0}\n              target={dataSetting.current}\n              onDismiss={() => {\n                setPageStatus(draft => {\n                  draft.show.dataConfig = false;\n                });\n              }}\n              setInitialFocus={true}\n              hidden={!pageStatus.show.dataConfig}\n            >\n              <div className=\"vi-callout-header\">\n                <p className=\"vi-callout-title\">Upload Your own dataset</p>\n              </div>\n              <div className=\"vi-callout-inner\">\n                <div className=\"vi-callout-content\">\n                  <p className=\"vi-callout-subTex\">\n                    .csv, .json, .txt are supportted.\n                  </p>\n                </div>\n                <div className=\"vi-callout-actions\">\n                  <input\n                    type=\"file\"\n                    ref={fileEle}\n                    multiple\n                    accept=\"*\"\n                    style={{ display: \"none\" }}\n                    onChange={fileUploadHanlder}\n                  />\n                  <CommandBar\n                    overflowButtonProps={{ name: \"More\" }}\n                    items={commandBarList}\n                  />\n                </div>\n              </div>\n            </Callout>\n          </div>\n          <IconButton\n            iconProps={{ iconName: \"Settings\" }}\n            ariaLabel=\"field setting\"\n            onClick={() => {\n              setPageStatus(draft => {\n                draft.show.fieldConfig = true;\n              });\n            }}\n          />\n        </Stack>\n        <div style={{ margin: \"20px 0px\" }}>\n          <ComboBox\n            styles={{ root: { maxWidth: \"180px\" } }}\n            selectedKey={cleanMethod}\n            label=\"Clean Method\"\n            allowFreeform={true}\n            autoComplete=\"on\"\n            options={cleanMethodList}\n            onChange={(e, option) => {\n              option && setCleanMethod(option.key as CleanMethod);\n            }}\n          />\n        </div>\n        <p style={{ fontSize: 12, fontWeight: 400, color: \"#595959\" }}>\n          Remember to adjust the fields' types and cleaning strategy before\n          extracting insights.\n        </p>\n        <i style={{ fontSize: 12, fontWeight: 300, color: \"#595959\" }}>\n          Number of records {preparedData.length}\n        </i>\n        <DataTable fields={state.fields} dataSource={preparedData} />\n      </div>\n    </div>\n  );\n};\n\nexport default DataSourceBoard;\n","import React from \"react\";\nimport { useGlobalState, GlobalStateProvider } from \"./state\";\nimport { Pivot, PivotItem } from \"office-ui-fabric-react\";\nimport { useComposeState } from \"./utils/index\";\nimport \"./App.css\";\n\nimport Gallery from \"./pages/gallery/index\";\nimport NoteBook from \"./pages/notebook/index\";\nimport DataSourceBoard from \"./pages/dataSource/index\";\n\nconst pivotList = [\n  {\n    title: \"DataSource\",\n    itemKey: \"pivot-\" + 1\n  },\n  {\n    title: \"NoteBook\",\n    itemKey: \"pivot-\" + 2\n  },\n  {\n    title: \"Explore\",\n    itemKey: \"pivot-\" + 3\n  }\n];\n\ninterface PageStatus {\n  show: {\n    insightBoard: boolean;\n    configPanel: boolean;\n    fieldConfig: boolean;\n    dataConfig: boolean;\n  };\n  current: {\n    pivotKey: string;\n  };\n}\n\nfunction App() {\n  const [state, updateState] = useGlobalState();\n  const [pageStatus, setPageStatus] = useComposeState<PageStatus>({\n    show: {\n      insightBoard: false,\n      fieldConfig: false,\n      configPanel: false,\n      dataConfig: false\n    },\n    current: {\n      pivotKey: pivotList[0].itemKey\n    }\n  });\n\n  return (\n    <div>\n      <div className=\"header-bar\">\n        <div className=\"ms-Grid-row\">\n          <div className=\"ms-Grid-col ms-sm6 ms-md4 ms-lg1\">\n            <a\n              href=\"https://github.com/ObservedObserver/visual-insights\"\n              className=\"logo\"\n            >\n              <img src=\"/logo.png\" />\n            </a>\n          </div>\n          <div className=\"ms-Grid-col ms-sm6 ms-md8 ms-lg11\">\n            <Pivot\n              selectedKey={pageStatus.current.pivotKey}\n              onLinkClick={item => {\n                item &&\n                  item.props.itemKey &&\n                  setPageStatus(draft => {\n                    draft.current.pivotKey = item.props.itemKey!;\n                  });\n              }}\n              headersOnly={true}\n            >\n              {pivotList.map(pivot => (\n                <PivotItem\n                  key={pivot.itemKey}\n                  headerText={pivot.title}\n                  itemKey={pivot.itemKey}\n                />\n              ))}\n            </Pivot>\n          </div>\n        </div>\n      </div>\n      {pageStatus.current.pivotKey === \"pivot-3\" && (\n        <Gallery\n          subspaceList={state.subspaceList}\n          dataSource={state.cookedDataSource}\n          summary={state.summary}\n        />\n      )}\n      {pageStatus.current.pivotKey === \"pivot-1\" && <DataSourceBoard onExtractInsights={() => {\n        setPageStatus(draft => {\n          draft.current.pivotKey = \"pivot-3\";\n          draft.show.insightBoard = true;\n        });\n      }\n      } />}\n      {pageStatus.current.pivotKey === \"pivot-2\" && (\n        <div className=\"content-container\">\n          <div className=\"card\">\n            <NoteBook\n              summary={state.summary}\n              subspaceList={state.subspaceList}\n              dataSource={state.cookedDataSource}\n            />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default function() {\n  return (\n    <GlobalStateProvider>\n      <App />\n    </GlobalStateProvider>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { initializeIcons } from '@uifabric/icons';\nimport * as serviceWorker from './serviceWorker';\ninitializeIcons();\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}